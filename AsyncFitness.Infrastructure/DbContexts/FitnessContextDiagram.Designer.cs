////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was generated by a tool.
////     Runtime Version:4.0.30319.42000
////
////     Changes to this file may cause incorrect behavior and will be lost if
////     the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------

//#pragma warning disable 1591

//namespace AsyncFitness.Infrastructure.DbContexts {
    
    
//    /// <summary>
//    ///Represents a strongly typed in-memory cache of data.
//    ///</summary>
//    [global::System.Serializable()]
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
//    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
//    public partial class DataSet1 : global::System.Data.DataSet {
        
//        private FitnessAdminDataTable tableFitnessAdmin;
        
//        private FitnessCenterDataTable tableFitnessCenter;
        
//        private FitnessClassDataTable tableFitnessClass;
        
//        private FitnessConceptDataTable tableFitnessConcept;
        
//        private FitnessConceptAtCenterDataTable tableFitnessConceptAtCenter;
        
//        private FitnessCustomerDataTable tableFitnessCustomer;
        
//        private FitnessCustomerClassBookingDataTable tableFitnessCustomerClassBooking;
        
//        private FitnessLocationDataTable tableFitnessLocation;
        
//        private FitnessSubscriptionDataTable tableFitnessSubscription;
        
//        private FitnessTrainerDataTable tableFitnessTrainer;
        
//        private FitnessTrainerClassBookingDataTable tableFitnessTrainerClassBooking;
        
//        private global::System.Data.DataRelation relationFK_FitnessCenter_FitnessAdmin_GymLeaderId;
        
//        private global::System.Data.DataRelation relationFK_FitnessClass_FitnessConcept_ConceptId;
        
//        private global::System.Data.DataRelation relationFK_FitnessClass_FitnessLocation_LocationId;
        
//        private global::System.Data.DataRelation relationFK_FitnessConcept_FitnessTrainer_TrainerId;
        
//        private global::System.Data.DataRelation relationFK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId;
        
//        private global::System.Data.DataRelation relationFK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId;
        
//        private global::System.Data.DataRelation relationFK_FitnessCustomer_FitnessSubscription_SubscriptionName;
        
//        private global::System.Data.DataRelation relationFK_FitnessCustomer_FitnessTrainer_TrainerId;
        
//        private global::System.Data.DataRelation relationFK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId;
        
//        private global::System.Data.DataRelation relationFK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId;
        
//        private global::System.Data.DataRelation relationFK_FitnessLocation_FitnessCenter_CenterId;
        
//        private global::System.Data.DataRelation relationFK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId;
        
//        private global::System.Data.DataRelation relationFK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId;
        
//        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public DataSet1() {
//            this.BeginInit();
//            this.InitClass();
//            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
//            base.Tables.CollectionChanged += schemaChangedHandler;
//            base.Relations.CollectionChanged += schemaChangedHandler;
//            this.EndInit();
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                base(info, context, false) {
//            if ((this.IsBinarySerialized(info, context) == true)) {
//                this.InitVars(false);
//                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
//                this.Tables.CollectionChanged += schemaChangedHandler1;
//                this.Relations.CollectionChanged += schemaChangedHandler1;
//                return;
//            }
//            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
//            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
//                global::System.Data.DataSet ds = new global::System.Data.DataSet();
//                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
//                if ((ds.Tables["FitnessAdmin"] != null)) {
//                    base.Tables.Add(new FitnessAdminDataTable(ds.Tables["FitnessAdmin"]));
//                }
//                if ((ds.Tables["FitnessCenter"] != null)) {
//                    base.Tables.Add(new FitnessCenterDataTable(ds.Tables["FitnessCenter"]));
//                }
//                if ((ds.Tables["FitnessClass"] != null)) {
//                    base.Tables.Add(new FitnessClassDataTable(ds.Tables["FitnessClass"]));
//                }
//                if ((ds.Tables["FitnessConcept"] != null)) {
//                    base.Tables.Add(new FitnessConceptDataTable(ds.Tables["FitnessConcept"]));
//                }
//                if ((ds.Tables["FitnessConceptAtCenter"] != null)) {
//                    base.Tables.Add(new FitnessConceptAtCenterDataTable(ds.Tables["FitnessConceptAtCenter"]));
//                }
//                if ((ds.Tables["FitnessCustomer"] != null)) {
//                    base.Tables.Add(new FitnessCustomerDataTable(ds.Tables["FitnessCustomer"]));
//                }
//                if ((ds.Tables["FitnessCustomerClassBooking"] != null)) {
//                    base.Tables.Add(new FitnessCustomerClassBookingDataTable(ds.Tables["FitnessCustomerClassBooking"]));
//                }
//                if ((ds.Tables["FitnessLocation"] != null)) {
//                    base.Tables.Add(new FitnessLocationDataTable(ds.Tables["FitnessLocation"]));
//                }
//                if ((ds.Tables["FitnessSubscription"] != null)) {
//                    base.Tables.Add(new FitnessSubscriptionDataTable(ds.Tables["FitnessSubscription"]));
//                }
//                if ((ds.Tables["FitnessTrainer"] != null)) {
//                    base.Tables.Add(new FitnessTrainerDataTable(ds.Tables["FitnessTrainer"]));
//                }
//                if ((ds.Tables["FitnessTrainerClassBooking"] != null)) {
//                    base.Tables.Add(new FitnessTrainerClassBookingDataTable(ds.Tables["FitnessTrainerClassBooking"]));
//                }
//                this.DataSetName = ds.DataSetName;
//                this.Prefix = ds.Prefix;
//                this.Namespace = ds.Namespace;
//                this.Locale = ds.Locale;
//                this.CaseSensitive = ds.CaseSensitive;
//                this.EnforceConstraints = ds.EnforceConstraints;
//                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
//                this.InitVars();
//            }
//            else {
//                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
//            }
//            this.GetSerializationData(info, context);
//            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
//            base.Tables.CollectionChanged += schemaChangedHandler;
//            this.Relations.CollectionChanged += schemaChangedHandler;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessAdminDataTable FitnessAdmin {
//            get {
//                return this.tableFitnessAdmin;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessCenterDataTable FitnessCenter {
//            get {
//                return this.tableFitnessCenter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessClassDataTable FitnessClass {
//            get {
//                return this.tableFitnessClass;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessConceptDataTable FitnessConcept {
//            get {
//                return this.tableFitnessConcept;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessConceptAtCenterDataTable FitnessConceptAtCenter {
//            get {
//                return this.tableFitnessConceptAtCenter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessCustomerDataTable FitnessCustomer {
//            get {
//                return this.tableFitnessCustomer;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessCustomerClassBookingDataTable FitnessCustomerClassBooking {
//            get {
//                return this.tableFitnessCustomerClassBooking;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessLocationDataTable FitnessLocation {
//            get {
//                return this.tableFitnessLocation;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessSubscriptionDataTable FitnessSubscription {
//            get {
//                return this.tableFitnessSubscription;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessTrainerDataTable FitnessTrainer {
//            get {
//                return this.tableFitnessTrainer;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public FitnessTrainerClassBookingDataTable FitnessTrainerClassBooking {
//            get {
//                return this.tableFitnessTrainerClassBooking;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.BrowsableAttribute(true)]
//        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
//        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
//            get {
//                return this._schemaSerializationMode;
//            }
//            set {
//                this._schemaSerializationMode = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
//        public new global::System.Data.DataTableCollection Tables {
//            get {
//                return base.Tables;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
//        public new global::System.Data.DataRelationCollection Relations {
//            get {
//                return base.Relations;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected override void InitializeDerivedDataSet() {
//            this.BeginInit();
//            this.InitClass();
//            this.EndInit();
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public override global::System.Data.DataSet Clone() {
//            DataSet1 cln = ((DataSet1)(base.Clone()));
//            cln.InitVars();
//            cln.SchemaSerializationMode = this.SchemaSerializationMode;
//            return cln;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected override bool ShouldSerializeTables() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected override bool ShouldSerializeRelations() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
//            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
//                this.Reset();
//                global::System.Data.DataSet ds = new global::System.Data.DataSet();
//                ds.ReadXml(reader);
//                if ((ds.Tables["FitnessAdmin"] != null)) {
//                    base.Tables.Add(new FitnessAdminDataTable(ds.Tables["FitnessAdmin"]));
//                }
//                if ((ds.Tables["FitnessCenter"] != null)) {
//                    base.Tables.Add(new FitnessCenterDataTable(ds.Tables["FitnessCenter"]));
//                }
//                if ((ds.Tables["FitnessClass"] != null)) {
//                    base.Tables.Add(new FitnessClassDataTable(ds.Tables["FitnessClass"]));
//                }
//                if ((ds.Tables["FitnessConcept"] != null)) {
//                    base.Tables.Add(new FitnessConceptDataTable(ds.Tables["FitnessConcept"]));
//                }
//                if ((ds.Tables["FitnessConceptAtCenter"] != null)) {
//                    base.Tables.Add(new FitnessConceptAtCenterDataTable(ds.Tables["FitnessConceptAtCenter"]));
//                }
//                if ((ds.Tables["FitnessCustomer"] != null)) {
//                    base.Tables.Add(new FitnessCustomerDataTable(ds.Tables["FitnessCustomer"]));
//                }
//                if ((ds.Tables["FitnessCustomerClassBooking"] != null)) {
//                    base.Tables.Add(new FitnessCustomerClassBookingDataTable(ds.Tables["FitnessCustomerClassBooking"]));
//                }
//                if ((ds.Tables["FitnessLocation"] != null)) {
//                    base.Tables.Add(new FitnessLocationDataTable(ds.Tables["FitnessLocation"]));
//                }
//                if ((ds.Tables["FitnessSubscription"] != null)) {
//                    base.Tables.Add(new FitnessSubscriptionDataTable(ds.Tables["FitnessSubscription"]));
//                }
//                if ((ds.Tables["FitnessTrainer"] != null)) {
//                    base.Tables.Add(new FitnessTrainerDataTable(ds.Tables["FitnessTrainer"]));
//                }
//                if ((ds.Tables["FitnessTrainerClassBooking"] != null)) {
//                    base.Tables.Add(new FitnessTrainerClassBookingDataTable(ds.Tables["FitnessTrainerClassBooking"]));
//                }
//                this.DataSetName = ds.DataSetName;
//                this.Prefix = ds.Prefix;
//                this.Namespace = ds.Namespace;
//                this.Locale = ds.Locale;
//                this.CaseSensitive = ds.CaseSensitive;
//                this.EnforceConstraints = ds.EnforceConstraints;
//                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
//                this.InitVars();
//            }
//            else {
//                this.ReadXml(reader);
//                this.InitVars();
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
//            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
//            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
//            stream.Position = 0;
//            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal void InitVars() {
//            this.InitVars(true);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal void InitVars(bool initTable) {
//            this.tableFitnessAdmin = ((FitnessAdminDataTable)(base.Tables["FitnessAdmin"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessAdmin != null)) {
//                    this.tableFitnessAdmin.InitVars();
//                }
//            }
//            this.tableFitnessCenter = ((FitnessCenterDataTable)(base.Tables["FitnessCenter"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessCenter != null)) {
//                    this.tableFitnessCenter.InitVars();
//                }
//            }
//            this.tableFitnessClass = ((FitnessClassDataTable)(base.Tables["FitnessClass"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessClass != null)) {
//                    this.tableFitnessClass.InitVars();
//                }
//            }
//            this.tableFitnessConcept = ((FitnessConceptDataTable)(base.Tables["FitnessConcept"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessConcept != null)) {
//                    this.tableFitnessConcept.InitVars();
//                }
//            }
//            this.tableFitnessConceptAtCenter = ((FitnessConceptAtCenterDataTable)(base.Tables["FitnessConceptAtCenter"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessConceptAtCenter != null)) {
//                    this.tableFitnessConceptAtCenter.InitVars();
//                }
//            }
//            this.tableFitnessCustomer = ((FitnessCustomerDataTable)(base.Tables["FitnessCustomer"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessCustomer != null)) {
//                    this.tableFitnessCustomer.InitVars();
//                }
//            }
//            this.tableFitnessCustomerClassBooking = ((FitnessCustomerClassBookingDataTable)(base.Tables["FitnessCustomerClassBooking"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessCustomerClassBooking != null)) {
//                    this.tableFitnessCustomerClassBooking.InitVars();
//                }
//            }
//            this.tableFitnessLocation = ((FitnessLocationDataTable)(base.Tables["FitnessLocation"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessLocation != null)) {
//                    this.tableFitnessLocation.InitVars();
//                }
//            }
//            this.tableFitnessSubscription = ((FitnessSubscriptionDataTable)(base.Tables["FitnessSubscription"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessSubscription != null)) {
//                    this.tableFitnessSubscription.InitVars();
//                }
//            }
//            this.tableFitnessTrainer = ((FitnessTrainerDataTable)(base.Tables["FitnessTrainer"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessTrainer != null)) {
//                    this.tableFitnessTrainer.InitVars();
//                }
//            }
//            this.tableFitnessTrainerClassBooking = ((FitnessTrainerClassBookingDataTable)(base.Tables["FitnessTrainerClassBooking"]));
//            if ((initTable == true)) {
//                if ((this.tableFitnessTrainerClassBooking != null)) {
//                    this.tableFitnessTrainerClassBooking.InitVars();
//                }
//            }
//            this.relationFK_FitnessCenter_FitnessAdmin_GymLeaderId = this.Relations["FK_FitnessCenter_FitnessAdmin_GymLeaderId"];
//            this.relationFK_FitnessClass_FitnessConcept_ConceptId = this.Relations["FK_FitnessClass_FitnessConcept_ConceptId"];
//            this.relationFK_FitnessClass_FitnessLocation_LocationId = this.Relations["FK_FitnessClass_FitnessLocation_LocationId"];
//            this.relationFK_FitnessConcept_FitnessTrainer_TrainerId = this.Relations["FK_FitnessConcept_FitnessTrainer_TrainerId"];
//            this.relationFK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId = this.Relations["FK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId"];
//            this.relationFK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId = this.Relations["FK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId"];
//            this.relationFK_FitnessCustomer_FitnessSubscription_SubscriptionName = this.Relations["FK_FitnessCustomer_FitnessSubscription_SubscriptionName"];
//            this.relationFK_FitnessCustomer_FitnessTrainer_TrainerId = this.Relations["FK_FitnessCustomer_FitnessTrainer_TrainerId"];
//            this.relationFK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId = this.Relations["FK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId"];
//            this.relationFK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId = this.Relations["FK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId"];
//            this.relationFK_FitnessLocation_FitnessCenter_CenterId = this.Relations["FK_FitnessLocation_FitnessCenter_CenterId"];
//            this.relationFK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId = this.Relations["FK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId"];
//            this.relationFK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId = this.Relations["FK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId"];
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitClass() {
//            this.DataSetName = "DataSet1";
//            this.Prefix = "";
//            this.Namespace = "http://tempuri.org/DataSet1.xsd";
//            this.EnforceConstraints = true;
//            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
//            this.tableFitnessAdmin = new FitnessAdminDataTable();
//            base.Tables.Add(this.tableFitnessAdmin);
//            this.tableFitnessCenter = new FitnessCenterDataTable();
//            base.Tables.Add(this.tableFitnessCenter);
//            this.tableFitnessClass = new FitnessClassDataTable();
//            base.Tables.Add(this.tableFitnessClass);
//            this.tableFitnessConcept = new FitnessConceptDataTable();
//            base.Tables.Add(this.tableFitnessConcept);
//            this.tableFitnessConceptAtCenter = new FitnessConceptAtCenterDataTable();
//            base.Tables.Add(this.tableFitnessConceptAtCenter);
//            this.tableFitnessCustomer = new FitnessCustomerDataTable();
//            base.Tables.Add(this.tableFitnessCustomer);
//            this.tableFitnessCustomerClassBooking = new FitnessCustomerClassBookingDataTable();
//            base.Tables.Add(this.tableFitnessCustomerClassBooking);
//            this.tableFitnessLocation = new FitnessLocationDataTable();
//            base.Tables.Add(this.tableFitnessLocation);
//            this.tableFitnessSubscription = new FitnessSubscriptionDataTable();
//            base.Tables.Add(this.tableFitnessSubscription);
//            this.tableFitnessTrainer = new FitnessTrainerDataTable();
//            base.Tables.Add(this.tableFitnessTrainer);
//            this.tableFitnessTrainerClassBooking = new FitnessTrainerClassBookingDataTable();
//            base.Tables.Add(this.tableFitnessTrainerClassBooking);
//            this.relationFK_FitnessCenter_FitnessAdmin_GymLeaderId = new global::System.Data.DataRelation("FK_FitnessCenter_FitnessAdmin_GymLeaderId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessAdmin.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessCenter.GymLeaderIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessCenter_FitnessAdmin_GymLeaderId);
//            this.relationFK_FitnessClass_FitnessConcept_ConceptId = new global::System.Data.DataRelation("FK_FitnessClass_FitnessConcept_ConceptId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessConcept.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessClass.ConceptIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessClass_FitnessConcept_ConceptId);
//            this.relationFK_FitnessClass_FitnessLocation_LocationId = new global::System.Data.DataRelation("FK_FitnessClass_FitnessLocation_LocationId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessLocation.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessClass.LocationIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessClass_FitnessLocation_LocationId);
//            this.relationFK_FitnessConcept_FitnessTrainer_TrainerId = new global::System.Data.DataRelation("FK_FitnessConcept_FitnessTrainer_TrainerId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessTrainer.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessConcept.TrainerIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessConcept_FitnessTrainer_TrainerId);
//            this.relationFK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId = new global::System.Data.DataRelation("FK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessCenter.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessConceptAtCenter.CentersWithConceptIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId);
//            this.relationFK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId = new global::System.Data.DataRelation("FK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessConcept.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessConceptAtCenter.AvailableConceptsIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId);
//            this.relationFK_FitnessCustomer_FitnessSubscription_SubscriptionName = new global::System.Data.DataRelation("FK_FitnessCustomer_FitnessSubscription_SubscriptionName", new global::System.Data.DataColumn[] {
//                        this.tableFitnessSubscription.NameColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessCustomer.SubscriptionNameColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessCustomer_FitnessSubscription_SubscriptionName);
//            this.relationFK_FitnessCustomer_FitnessTrainer_TrainerId = new global::System.Data.DataRelation("FK_FitnessCustomer_FitnessTrainer_TrainerId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessTrainer.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessCustomer.TrainerIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessCustomer_FitnessTrainer_TrainerId);
//            this.relationFK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId = new global::System.Data.DataRelation("FK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessClass.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessCustomerClassBooking.BookedClassesIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId);
//            this.relationFK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId = new global::System.Data.DataRelation("FK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessCustomer.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessCustomerClassBooking.BookedParticipantsIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId);
//            this.relationFK_FitnessLocation_FitnessCenter_CenterId = new global::System.Data.DataRelation("FK_FitnessLocation_FitnessCenter_CenterId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessCenter.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessLocation.CenterIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessLocation_FitnessCenter_CenterId);
//            this.relationFK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId = new global::System.Data.DataRelation("FK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessClass.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessTrainerClassBooking.ClassesByTrainerIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId);
//            this.relationFK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId = new global::System.Data.DataRelation("FK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId", new global::System.Data.DataColumn[] {
//                        this.tableFitnessTrainer.IdColumn}, new global::System.Data.DataColumn[] {
//                        this.tableFitnessTrainerClassBooking.InstructorsIdColumn}, false);
//            this.Relations.Add(this.relationFK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessAdmin() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessCenter() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessClass() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessConcept() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessConceptAtCenter() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessCustomer() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessCustomerClassBooking() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessLocation() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessSubscription() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessTrainer() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private bool ShouldSerializeFitnessTrainerClassBooking() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
//            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
//                this.InitVars();
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//            DataSet1 ds = new DataSet1();
//            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
//            any.Namespace = ds.Namespace;
//            sequence.Items.Add(any);
//            type.Particle = sequence;
//            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//            if (xs.Contains(dsSchema.TargetNamespace)) {
//                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                try {
//                    global::System.Xml.Schema.XmlSchema schema = null;
//                    dsSchema.Write(s1);
//                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                        s2.SetLength(0);
//                        schema.Write(s2);
//                        if ((s1.Length == s2.Length)) {
//                            s1.Position = 0;
//                            s2.Position = 0;
//                            for (; ((s1.Position != s1.Length) 
//                                        && (s1.ReadByte() == s2.ReadByte())); ) {
//                                ;
//                            }
//                            if ((s1.Position == s1.Length)) {
//                                return type;
//                            }
//                        }
//                    }
//                }
//                finally {
//                    if ((s1 != null)) {
//                        s1.Close();
//                    }
//                    if ((s2 != null)) {
//                        s2.Close();
//                    }
//                }
//            }
//            xs.Add(dsSchema);
//            return type;
//        }
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessAdminRowChangeEventHandler(object sender, FitnessAdminRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessCenterRowChangeEventHandler(object sender, FitnessCenterRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessClassRowChangeEventHandler(object sender, FitnessClassRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessConceptRowChangeEventHandler(object sender, FitnessConceptRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessConceptAtCenterRowChangeEventHandler(object sender, FitnessConceptAtCenterRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessCustomerRowChangeEventHandler(object sender, FitnessCustomerRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessCustomerClassBookingRowChangeEventHandler(object sender, FitnessCustomerClassBookingRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessLocationRowChangeEventHandler(object sender, FitnessLocationRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessSubscriptionRowChangeEventHandler(object sender, FitnessSubscriptionRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessTrainerRowChangeEventHandler(object sender, FitnessTrainerRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public delegate void FitnessTrainerClassBookingRowChangeEventHandler(object sender, FitnessTrainerClassBookingRowChangeEvent e);
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessAdminDataTable : global::System.Data.TypedTableBase<FitnessAdminRow> {
            
//            private global::System.Data.DataColumn columnId;
            
//            private global::System.Data.DataColumn columnEmail;
            
//            private global::System.Data.DataColumn columnPhone;
            
//            private global::System.Data.DataColumn columnFirstName;
            
//            private global::System.Data.DataColumn columnLastName;
            
//            private global::System.Data.DataColumn columnStreetName;
            
//            private global::System.Data.DataColumn columnStreetNumber;
            
//            private global::System.Data.DataColumn columnCity;
            
//            private global::System.Data.DataColumn columnPostalCode;
            
//            private global::System.Data.DataColumn columnJoinDate;
            
//            private global::System.Data.DataColumn columnProfileImage;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminDataTable() {
//                this.TableName = "FitnessAdmin";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessAdminDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessAdminDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IdColumn {
//                get {
//                    return this.columnId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn EmailColumn {
//                get {
//                    return this.columnEmail;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn PhoneColumn {
//                get {
//                    return this.columnPhone;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn FirstNameColumn {
//                get {
//                    return this.columnFirstName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn LastNameColumn {
//                get {
//                    return this.columnLastName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn StreetNameColumn {
//                get {
//                    return this.columnStreetName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn StreetNumberColumn {
//                get {
//                    return this.columnStreetNumber;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn CityColumn {
//                get {
//                    return this.columnCity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn PostalCodeColumn {
//                get {
//                    return this.columnPostalCode;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn JoinDateColumn {
//                get {
//                    return this.columnJoinDate;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn ProfileImageColumn {
//                get {
//                    return this.columnProfileImage;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminRow this[int index] {
//                get {
//                    return ((FitnessAdminRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessAdminRowChangeEventHandler FitnessAdminRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessAdminRowChangeEventHandler FitnessAdminRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessAdminRowChangeEventHandler FitnessAdminRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessAdminRowChangeEventHandler FitnessAdminRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessAdminRow(FitnessAdminRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminRow AddFitnessAdminRow(string Email, string Phone, string FirstName, string LastName, string StreetName, string StreetNumber, string City, string PostalCode, System.DateTime JoinDate, byte[] ProfileImage) {
//                FitnessAdminRow rowFitnessAdminRow = ((FitnessAdminRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        Email,
//                        Phone,
//                        FirstName,
//                        LastName,
//                        StreetName,
//                        StreetNumber,
//                        City,
//                        PostalCode,
//                        JoinDate,
//                        ProfileImage};
//                rowFitnessAdminRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessAdminRow);
//                return rowFitnessAdminRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminRow FindById(int Id) {
//                return ((FitnessAdminRow)(this.Rows.Find(new object[] {
//                            Id})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessAdminDataTable cln = ((FitnessAdminDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessAdminDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnId = base.Columns["Id"];
//                this.columnEmail = base.Columns["Email"];
//                this.columnPhone = base.Columns["Phone"];
//                this.columnFirstName = base.Columns["FirstName"];
//                this.columnLastName = base.Columns["LastName"];
//                this.columnStreetName = base.Columns["StreetName"];
//                this.columnStreetNumber = base.Columns["StreetNumber"];
//                this.columnCity = base.Columns["City"];
//                this.columnPostalCode = base.Columns["PostalCode"];
//                this.columnJoinDate = base.Columns["JoinDate"];
//                this.columnProfileImage = base.Columns["ProfileImage"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnId);
//                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnEmail);
//                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPhone);
//                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnFirstName);
//                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnLastName);
//                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnStreetName);
//                this.columnStreetNumber = new global::System.Data.DataColumn("StreetNumber", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnStreetNumber);
//                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCity);
//                this.columnPostalCode = new global::System.Data.DataColumn("PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPostalCode);
//                this.columnJoinDate = new global::System.Data.DataColumn("JoinDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnJoinDate);
//                this.columnProfileImage = new global::System.Data.DataColumn("ProfileImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnProfileImage);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnId}, true));
//                this.columnId.AutoIncrement = true;
//                this.columnId.AutoIncrementSeed = -1;
//                this.columnId.AutoIncrementStep = -1;
//                this.columnId.AllowDBNull = false;
//                this.columnId.ReadOnly = true;
//                this.columnId.Unique = true;
//                this.columnEmail.AllowDBNull = false;
//                this.columnEmail.MaxLength = 100;
//                this.columnPhone.AllowDBNull = false;
//                this.columnPhone.MaxLength = 8;
//                this.columnFirstName.AllowDBNull = false;
//                this.columnFirstName.MaxLength = 100;
//                this.columnLastName.AllowDBNull = false;
//                this.columnLastName.MaxLength = 100;
//                this.columnStreetName.AllowDBNull = false;
//                this.columnStreetName.MaxLength = 100;
//                this.columnStreetNumber.AllowDBNull = false;
//                this.columnStreetNumber.MaxLength = 4;
//                this.columnCity.AllowDBNull = false;
//                this.columnCity.MaxLength = 100;
//                this.columnPostalCode.AllowDBNull = false;
//                this.columnPostalCode.MaxLength = 7;
//                this.columnJoinDate.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminRow NewFitnessAdminRow() {
//                return ((FitnessAdminRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessAdminRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessAdminRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessAdminRowChanged != null)) {
//                    this.FitnessAdminRowChanged(this, new FitnessAdminRowChangeEvent(((FitnessAdminRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessAdminRowChanging != null)) {
//                    this.FitnessAdminRowChanging(this, new FitnessAdminRowChangeEvent(((FitnessAdminRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessAdminRowDeleted != null)) {
//                    this.FitnessAdminRowDeleted(this, new FitnessAdminRowChangeEvent(((FitnessAdminRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessAdminRowDeleting != null)) {
//                    this.FitnessAdminRowDeleting(this, new FitnessAdminRowChangeEvent(((FitnessAdminRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessAdminRow(FitnessAdminRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessAdminDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessCenterDataTable : global::System.Data.TypedTableBase<FitnessCenterRow> {
            
//            private global::System.Data.DataColumn columnId;
            
//            private global::System.Data.DataColumn columnGymLeaderId;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterDataTable() {
//                this.TableName = "FitnessCenter";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessCenterDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessCenterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IdColumn {
//                get {
//                    return this.columnId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn GymLeaderIdColumn {
//                get {
//                    return this.columnGymLeaderId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow this[int index] {
//                get {
//                    return ((FitnessCenterRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCenterRowChangeEventHandler FitnessCenterRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCenterRowChangeEventHandler FitnessCenterRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCenterRowChangeEventHandler FitnessCenterRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCenterRowChangeEventHandler FitnessCenterRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessCenterRow(FitnessCenterRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow AddFitnessCenterRow(FitnessAdminRow parentFitnessAdminRowByFK_FitnessCenter_FitnessAdmin_GymLeaderId) {
//                FitnessCenterRow rowFitnessCenterRow = ((FitnessCenterRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        null};
//                if ((parentFitnessAdminRowByFK_FitnessCenter_FitnessAdmin_GymLeaderId != null)) {
//                    columnValuesArray[1] = parentFitnessAdminRowByFK_FitnessCenter_FitnessAdmin_GymLeaderId[0];
//                }
//                rowFitnessCenterRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessCenterRow);
//                return rowFitnessCenterRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow FindById(int Id) {
//                return ((FitnessCenterRow)(this.Rows.Find(new object[] {
//                            Id})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessCenterDataTable cln = ((FitnessCenterDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessCenterDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnId = base.Columns["Id"];
//                this.columnGymLeaderId = base.Columns["GymLeaderId"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnId);
//                this.columnGymLeaderId = new global::System.Data.DataColumn("GymLeaderId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnGymLeaderId);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnId}, true));
//                this.columnId.AutoIncrement = true;
//                this.columnId.AutoIncrementSeed = -1;
//                this.columnId.AutoIncrementStep = -1;
//                this.columnId.AllowDBNull = false;
//                this.columnId.ReadOnly = true;
//                this.columnId.Unique = true;
//                this.columnGymLeaderId.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow NewFitnessCenterRow() {
//                return ((FitnessCenterRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessCenterRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessCenterRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessCenterRowChanged != null)) {
//                    this.FitnessCenterRowChanged(this, new FitnessCenterRowChangeEvent(((FitnessCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessCenterRowChanging != null)) {
//                    this.FitnessCenterRowChanging(this, new FitnessCenterRowChangeEvent(((FitnessCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessCenterRowDeleted != null)) {
//                    this.FitnessCenterRowDeleted(this, new FitnessCenterRowChangeEvent(((FitnessCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessCenterRowDeleting != null)) {
//                    this.FitnessCenterRowDeleting(this, new FitnessCenterRowChangeEvent(((FitnessCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessCenterRow(FitnessCenterRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessCenterDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessClassDataTable : global::System.Data.TypedTableBase<FitnessClassRow> {
            
//            private global::System.Data.DataColumn columnId;
            
//            private global::System.Data.DataColumn columnLocationId;
            
//            private global::System.Data.DataColumn columnConceptId;
            
//            private global::System.Data.DataColumn columnStart;
            
//            private global::System.Data.DataColumn columnEnd;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassDataTable() {
//                this.TableName = "FitnessClass";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessClassDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessClassDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IdColumn {
//                get {
//                    return this.columnId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn LocationIdColumn {
//                get {
//                    return this.columnLocationId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn ConceptIdColumn {
//                get {
//                    return this.columnConceptId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn StartColumn {
//                get {
//                    return this.columnStart;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn EndColumn {
//                get {
//                    return this.columnEnd;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow this[int index] {
//                get {
//                    return ((FitnessClassRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessClassRowChangeEventHandler FitnessClassRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessClassRowChangeEventHandler FitnessClassRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessClassRowChangeEventHandler FitnessClassRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessClassRowChangeEventHandler FitnessClassRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessClassRow(FitnessClassRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow AddFitnessClassRow(FitnessLocationRow parentFitnessLocationRowByFK_FitnessClass_FitnessLocation_LocationId, FitnessConceptRow parentFitnessConceptRowByFK_FitnessClass_FitnessConcept_ConceptId, System.DateTime Start, System.DateTime End) {
//                FitnessClassRow rowFitnessClassRow = ((FitnessClassRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        null,
//                        null,
//                        Start,
//                        End};
//                if ((parentFitnessLocationRowByFK_FitnessClass_FitnessLocation_LocationId != null)) {
//                    columnValuesArray[1] = parentFitnessLocationRowByFK_FitnessClass_FitnessLocation_LocationId[0];
//                }
//                if ((parentFitnessConceptRowByFK_FitnessClass_FitnessConcept_ConceptId != null)) {
//                    columnValuesArray[2] = parentFitnessConceptRowByFK_FitnessClass_FitnessConcept_ConceptId[0];
//                }
//                rowFitnessClassRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessClassRow);
//                return rowFitnessClassRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow FindById(int Id) {
//                return ((FitnessClassRow)(this.Rows.Find(new object[] {
//                            Id})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessClassDataTable cln = ((FitnessClassDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessClassDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnId = base.Columns["Id"];
//                this.columnLocationId = base.Columns["LocationId"];
//                this.columnConceptId = base.Columns["ConceptId"];
//                this.columnStart = base.Columns["Start"];
//                this.columnEnd = base.Columns["End"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnId);
//                this.columnLocationId = new global::System.Data.DataColumn("LocationId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnLocationId);
//                this.columnConceptId = new global::System.Data.DataColumn("ConceptId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnConceptId);
//                this.columnStart = new global::System.Data.DataColumn("Start", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnStart);
//                this.columnEnd = new global::System.Data.DataColumn("End", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnEnd);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnId}, true));
//                this.columnId.AutoIncrement = true;
//                this.columnId.AutoIncrementSeed = -1;
//                this.columnId.AutoIncrementStep = -1;
//                this.columnId.AllowDBNull = false;
//                this.columnId.ReadOnly = true;
//                this.columnId.Unique = true;
//                this.columnLocationId.AllowDBNull = false;
//                this.columnConceptId.AllowDBNull = false;
//                this.columnStart.AllowDBNull = false;
//                this.columnEnd.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow NewFitnessClassRow() {
//                return ((FitnessClassRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessClassRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessClassRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessClassRowChanged != null)) {
//                    this.FitnessClassRowChanged(this, new FitnessClassRowChangeEvent(((FitnessClassRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessClassRowChanging != null)) {
//                    this.FitnessClassRowChanging(this, new FitnessClassRowChangeEvent(((FitnessClassRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessClassRowDeleted != null)) {
//                    this.FitnessClassRowDeleted(this, new FitnessClassRowChangeEvent(((FitnessClassRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessClassRowDeleting != null)) {
//                    this.FitnessClassRowDeleting(this, new FitnessClassRowChangeEvent(((FitnessClassRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessClassRow(FitnessClassRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessClassDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessConceptDataTable : global::System.Data.TypedTableBase<FitnessConceptRow> {
            
//            private global::System.Data.DataColumn columnId;
            
//            private global::System.Data.DataColumn columnName;
            
//            private global::System.Data.DataColumn columnDescription;
            
//            private global::System.Data.DataColumn columnDuration;
            
//            private global::System.Data.DataColumn columnTrainerId;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptDataTable() {
//                this.TableName = "FitnessConcept";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessConceptDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessConceptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IdColumn {
//                get {
//                    return this.columnId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn NameColumn {
//                get {
//                    return this.columnName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn DescriptionColumn {
//                get {
//                    return this.columnDescription;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn DurationColumn {
//                get {
//                    return this.columnDuration;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn TrainerIdColumn {
//                get {
//                    return this.columnTrainerId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow this[int index] {
//                get {
//                    return ((FitnessConceptRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptRowChangeEventHandler FitnessConceptRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptRowChangeEventHandler FitnessConceptRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptRowChangeEventHandler FitnessConceptRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptRowChangeEventHandler FitnessConceptRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessConceptRow(FitnessConceptRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow AddFitnessConceptRow(string Name, string Description, System.TimeSpan Duration, FitnessTrainerRow parentFitnessTrainerRowByFK_FitnessConcept_FitnessTrainer_TrainerId) {
//                FitnessConceptRow rowFitnessConceptRow = ((FitnessConceptRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        Name,
//                        Description,
//                        Duration,
//                        null};
//                if ((parentFitnessTrainerRowByFK_FitnessConcept_FitnessTrainer_TrainerId != null)) {
//                    columnValuesArray[4] = parentFitnessTrainerRowByFK_FitnessConcept_FitnessTrainer_TrainerId[10];
//                }
//                rowFitnessConceptRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessConceptRow);
//                return rowFitnessConceptRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow FindById(int Id) {
//                return ((FitnessConceptRow)(this.Rows.Find(new object[] {
//                            Id})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessConceptDataTable cln = ((FitnessConceptDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessConceptDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnId = base.Columns["Id"];
//                this.columnName = base.Columns["Name"];
//                this.columnDescription = base.Columns["Description"];
//                this.columnDuration = base.Columns["Duration"];
//                this.columnTrainerId = base.Columns["TrainerId"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnId);
//                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnName);
//                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnDescription);
//                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnDuration);
//                this.columnTrainerId = new global::System.Data.DataColumn("TrainerId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnTrainerId);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnId}, true));
//                this.columnId.AutoIncrement = true;
//                this.columnId.AutoIncrementSeed = -1;
//                this.columnId.AutoIncrementStep = -1;
//                this.columnId.AllowDBNull = false;
//                this.columnId.ReadOnly = true;
//                this.columnId.Unique = true;
//                this.columnName.AllowDBNull = false;
//                this.columnName.MaxLength = 50;
//                this.columnDescription.AllowDBNull = false;
//                this.columnDescription.MaxLength = 500;
//                this.columnDuration.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow NewFitnessConceptRow() {
//                return ((FitnessConceptRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessConceptRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessConceptRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessConceptRowChanged != null)) {
//                    this.FitnessConceptRowChanged(this, new FitnessConceptRowChangeEvent(((FitnessConceptRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessConceptRowChanging != null)) {
//                    this.FitnessConceptRowChanging(this, new FitnessConceptRowChangeEvent(((FitnessConceptRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessConceptRowDeleted != null)) {
//                    this.FitnessConceptRowDeleted(this, new FitnessConceptRowChangeEvent(((FitnessConceptRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessConceptRowDeleting != null)) {
//                    this.FitnessConceptRowDeleting(this, new FitnessConceptRowChangeEvent(((FitnessConceptRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessConceptRow(FitnessConceptRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessConceptDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessConceptAtCenterDataTable : global::System.Data.TypedTableBase<FitnessConceptAtCenterRow> {
            
//            private global::System.Data.DataColumn columnAvailableConceptsId;
            
//            private global::System.Data.DataColumn columnCentersWithConceptId;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterDataTable() {
//                this.TableName = "FitnessConceptAtCenter";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessConceptAtCenterDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessConceptAtCenterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn AvailableConceptsIdColumn {
//                get {
//                    return this.columnAvailableConceptsId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn CentersWithConceptIdColumn {
//                get {
//                    return this.columnCentersWithConceptId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRow this[int index] {
//                get {
//                    return ((FitnessConceptAtCenterRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptAtCenterRowChangeEventHandler FitnessConceptAtCenterRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptAtCenterRowChangeEventHandler FitnessConceptAtCenterRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptAtCenterRowChangeEventHandler FitnessConceptAtCenterRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessConceptAtCenterRowChangeEventHandler FitnessConceptAtCenterRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessConceptAtCenterRow(FitnessConceptAtCenterRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRow AddFitnessConceptAtCenterRow(FitnessConceptRow parentFitnessConceptRowByFK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId, FitnessCenterRow parentFitnessCenterRowByFK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId) {
//                FitnessConceptAtCenterRow rowFitnessConceptAtCenterRow = ((FitnessConceptAtCenterRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        null};
//                if ((parentFitnessConceptRowByFK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId != null)) {
//                    columnValuesArray[0] = parentFitnessConceptRowByFK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId[0];
//                }
//                if ((parentFitnessCenterRowByFK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId != null)) {
//                    columnValuesArray[1] = parentFitnessCenterRowByFK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId[0];
//                }
//                rowFitnessConceptAtCenterRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessConceptAtCenterRow);
//                return rowFitnessConceptAtCenterRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRow FindByAvailableConceptsIdCentersWithConceptId(int AvailableConceptsId, int CentersWithConceptId) {
//                return ((FitnessConceptAtCenterRow)(this.Rows.Find(new object[] {
//                            AvailableConceptsId,
//                            CentersWithConceptId})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessConceptAtCenterDataTable cln = ((FitnessConceptAtCenterDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessConceptAtCenterDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnAvailableConceptsId = base.Columns["AvailableConceptsId"];
//                this.columnCentersWithConceptId = base.Columns["CentersWithConceptId"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnAvailableConceptsId = new global::System.Data.DataColumn("AvailableConceptsId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnAvailableConceptsId);
//                this.columnCentersWithConceptId = new global::System.Data.DataColumn("CentersWithConceptId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCentersWithConceptId);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnAvailableConceptsId,
//                                this.columnCentersWithConceptId}, true));
//                this.columnAvailableConceptsId.AllowDBNull = false;
//                this.columnCentersWithConceptId.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRow NewFitnessConceptAtCenterRow() {
//                return ((FitnessConceptAtCenterRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessConceptAtCenterRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessConceptAtCenterRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessConceptAtCenterRowChanged != null)) {
//                    this.FitnessConceptAtCenterRowChanged(this, new FitnessConceptAtCenterRowChangeEvent(((FitnessConceptAtCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessConceptAtCenterRowChanging != null)) {
//                    this.FitnessConceptAtCenterRowChanging(this, new FitnessConceptAtCenterRowChangeEvent(((FitnessConceptAtCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessConceptAtCenterRowDeleted != null)) {
//                    this.FitnessConceptAtCenterRowDeleted(this, new FitnessConceptAtCenterRowChangeEvent(((FitnessConceptAtCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessConceptAtCenterRowDeleting != null)) {
//                    this.FitnessConceptAtCenterRowDeleting(this, new FitnessConceptAtCenterRowChangeEvent(((FitnessConceptAtCenterRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessConceptAtCenterRow(FitnessConceptAtCenterRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessConceptAtCenterDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessCustomerDataTable : global::System.Data.TypedTableBase<FitnessCustomerRow> {
            
//            private global::System.Data.DataColumn columnId;
            
//            private global::System.Data.DataColumn columnSubscriptionName;
            
//            private global::System.Data.DataColumn columnTrainerId;
            
//            private global::System.Data.DataColumn columnEmail;
            
//            private global::System.Data.DataColumn columnPhone;
            
//            private global::System.Data.DataColumn columnFirstName;
            
//            private global::System.Data.DataColumn columnLastName;
            
//            private global::System.Data.DataColumn columnStreetName;
            
//            private global::System.Data.DataColumn columnStreetNumber;
            
//            private global::System.Data.DataColumn columnCity;
            
//            private global::System.Data.DataColumn columnPostalCode;
            
//            private global::System.Data.DataColumn columnJoinDate;
            
//            private global::System.Data.DataColumn columnProfileImage;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerDataTable() {
//                this.TableName = "FitnessCustomer";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessCustomerDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessCustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IdColumn {
//                get {
//                    return this.columnId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn SubscriptionNameColumn {
//                get {
//                    return this.columnSubscriptionName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn TrainerIdColumn {
//                get {
//                    return this.columnTrainerId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn EmailColumn {
//                get {
//                    return this.columnEmail;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn PhoneColumn {
//                get {
//                    return this.columnPhone;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn FirstNameColumn {
//                get {
//                    return this.columnFirstName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn LastNameColumn {
//                get {
//                    return this.columnLastName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn StreetNameColumn {
//                get {
//                    return this.columnStreetName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn StreetNumberColumn {
//                get {
//                    return this.columnStreetNumber;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn CityColumn {
//                get {
//                    return this.columnCity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn PostalCodeColumn {
//                get {
//                    return this.columnPostalCode;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn JoinDateColumn {
//                get {
//                    return this.columnJoinDate;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn ProfileImageColumn {
//                get {
//                    return this.columnProfileImage;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow this[int index] {
//                get {
//                    return ((FitnessCustomerRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerRowChangeEventHandler FitnessCustomerRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerRowChangeEventHandler FitnessCustomerRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerRowChangeEventHandler FitnessCustomerRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerRowChangeEventHandler FitnessCustomerRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessCustomerRow(FitnessCustomerRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow AddFitnessCustomerRow(FitnessSubscriptionRow parentFitnessSubscriptionRowByFK_FitnessCustomer_FitnessSubscription_SubscriptionName, FitnessTrainerRow parentFitnessTrainerRowByFK_FitnessCustomer_FitnessTrainer_TrainerId, string Email, string Phone, string FirstName, string LastName, string StreetName, string StreetNumber, string City, string PostalCode, System.DateTime JoinDate, byte[] ProfileImage) {
//                FitnessCustomerRow rowFitnessCustomerRow = ((FitnessCustomerRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        null,
//                        null,
//                        Email,
//                        Phone,
//                        FirstName,
//                        LastName,
//                        StreetName,
//                        StreetNumber,
//                        City,
//                        PostalCode,
//                        JoinDate,
//                        ProfileImage};
//                if ((parentFitnessSubscriptionRowByFK_FitnessCustomer_FitnessSubscription_SubscriptionName != null)) {
//                    columnValuesArray[1] = parentFitnessSubscriptionRowByFK_FitnessCustomer_FitnessSubscription_SubscriptionName[0];
//                }
//                if ((parentFitnessTrainerRowByFK_FitnessCustomer_FitnessTrainer_TrainerId != null)) {
//                    columnValuesArray[2] = parentFitnessTrainerRowByFK_FitnessCustomer_FitnessTrainer_TrainerId[10];
//                }
//                rowFitnessCustomerRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessCustomerRow);
//                return rowFitnessCustomerRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow FindById(int Id) {
//                return ((FitnessCustomerRow)(this.Rows.Find(new object[] {
//                            Id})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessCustomerDataTable cln = ((FitnessCustomerDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessCustomerDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnId = base.Columns["Id"];
//                this.columnSubscriptionName = base.Columns["SubscriptionName"];
//                this.columnTrainerId = base.Columns["TrainerId"];
//                this.columnEmail = base.Columns["Email"];
//                this.columnPhone = base.Columns["Phone"];
//                this.columnFirstName = base.Columns["FirstName"];
//                this.columnLastName = base.Columns["LastName"];
//                this.columnStreetName = base.Columns["StreetName"];
//                this.columnStreetNumber = base.Columns["StreetNumber"];
//                this.columnCity = base.Columns["City"];
//                this.columnPostalCode = base.Columns["PostalCode"];
//                this.columnJoinDate = base.Columns["JoinDate"];
//                this.columnProfileImage = base.Columns["ProfileImage"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnId);
//                this.columnSubscriptionName = new global::System.Data.DataColumn("SubscriptionName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnSubscriptionName);
//                this.columnTrainerId = new global::System.Data.DataColumn("TrainerId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnTrainerId);
//                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnEmail);
//                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPhone);
//                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnFirstName);
//                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnLastName);
//                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnStreetName);
//                this.columnStreetNumber = new global::System.Data.DataColumn("StreetNumber", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnStreetNumber);
//                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCity);
//                this.columnPostalCode = new global::System.Data.DataColumn("PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPostalCode);
//                this.columnJoinDate = new global::System.Data.DataColumn("JoinDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnJoinDate);
//                this.columnProfileImage = new global::System.Data.DataColumn("ProfileImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnProfileImage);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnId}, true));
//                this.columnId.AutoIncrement = true;
//                this.columnId.AutoIncrementSeed = -1;
//                this.columnId.AutoIncrementStep = -1;
//                this.columnId.AllowDBNull = false;
//                this.columnId.ReadOnly = true;
//                this.columnId.Unique = true;
//                this.columnSubscriptionName.MaxLength = 450;
//                this.columnEmail.AllowDBNull = false;
//                this.columnEmail.MaxLength = 100;
//                this.columnPhone.AllowDBNull = false;
//                this.columnPhone.MaxLength = 8;
//                this.columnFirstName.AllowDBNull = false;
//                this.columnFirstName.MaxLength = 100;
//                this.columnLastName.AllowDBNull = false;
//                this.columnLastName.MaxLength = 100;
//                this.columnStreetName.AllowDBNull = false;
//                this.columnStreetName.MaxLength = 100;
//                this.columnStreetNumber.AllowDBNull = false;
//                this.columnStreetNumber.MaxLength = 4;
//                this.columnCity.AllowDBNull = false;
//                this.columnCity.MaxLength = 100;
//                this.columnPostalCode.AllowDBNull = false;
//                this.columnPostalCode.MaxLength = 7;
//                this.columnJoinDate.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow NewFitnessCustomerRow() {
//                return ((FitnessCustomerRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessCustomerRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessCustomerRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessCustomerRowChanged != null)) {
//                    this.FitnessCustomerRowChanged(this, new FitnessCustomerRowChangeEvent(((FitnessCustomerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessCustomerRowChanging != null)) {
//                    this.FitnessCustomerRowChanging(this, new FitnessCustomerRowChangeEvent(((FitnessCustomerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessCustomerRowDeleted != null)) {
//                    this.FitnessCustomerRowDeleted(this, new FitnessCustomerRowChangeEvent(((FitnessCustomerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessCustomerRowDeleting != null)) {
//                    this.FitnessCustomerRowDeleting(this, new FitnessCustomerRowChangeEvent(((FitnessCustomerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessCustomerRow(FitnessCustomerRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessCustomerDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessCustomerClassBookingDataTable : global::System.Data.TypedTableBase<FitnessCustomerClassBookingRow> {
            
//            private global::System.Data.DataColumn columnBookedClassesId;
            
//            private global::System.Data.DataColumn columnBookedParticipantsId;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingDataTable() {
//                this.TableName = "FitnessCustomerClassBooking";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessCustomerClassBookingDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessCustomerClassBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn BookedClassesIdColumn {
//                get {
//                    return this.columnBookedClassesId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn BookedParticipantsIdColumn {
//                get {
//                    return this.columnBookedParticipantsId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRow this[int index] {
//                get {
//                    return ((FitnessCustomerClassBookingRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerClassBookingRowChangeEventHandler FitnessCustomerClassBookingRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerClassBookingRowChangeEventHandler FitnessCustomerClassBookingRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerClassBookingRowChangeEventHandler FitnessCustomerClassBookingRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessCustomerClassBookingRowChangeEventHandler FitnessCustomerClassBookingRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessCustomerClassBookingRow(FitnessCustomerClassBookingRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRow AddFitnessCustomerClassBookingRow(FitnessClassRow parentFitnessClassRowByFK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId, FitnessCustomerRow parentFitnessCustomerRowByFK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId) {
//                FitnessCustomerClassBookingRow rowFitnessCustomerClassBookingRow = ((FitnessCustomerClassBookingRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        null};
//                if ((parentFitnessClassRowByFK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId != null)) {
//                    columnValuesArray[0] = parentFitnessClassRowByFK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId[0];
//                }
//                if ((parentFitnessCustomerRowByFK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId != null)) {
//                    columnValuesArray[1] = parentFitnessCustomerRowByFK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId[0];
//                }
//                rowFitnessCustomerClassBookingRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessCustomerClassBookingRow);
//                return rowFitnessCustomerClassBookingRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRow FindByBookedClassesIdBookedParticipantsId(int BookedClassesId, int BookedParticipantsId) {
//                return ((FitnessCustomerClassBookingRow)(this.Rows.Find(new object[] {
//                            BookedClassesId,
//                            BookedParticipantsId})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessCustomerClassBookingDataTable cln = ((FitnessCustomerClassBookingDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessCustomerClassBookingDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnBookedClassesId = base.Columns["BookedClassesId"];
//                this.columnBookedParticipantsId = base.Columns["BookedParticipantsId"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnBookedClassesId = new global::System.Data.DataColumn("BookedClassesId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnBookedClassesId);
//                this.columnBookedParticipantsId = new global::System.Data.DataColumn("BookedParticipantsId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnBookedParticipantsId);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnBookedClassesId,
//                                this.columnBookedParticipantsId}, true));
//                this.columnBookedClassesId.AllowDBNull = false;
//                this.columnBookedParticipantsId.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRow NewFitnessCustomerClassBookingRow() {
//                return ((FitnessCustomerClassBookingRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessCustomerClassBookingRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessCustomerClassBookingRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessCustomerClassBookingRowChanged != null)) {
//                    this.FitnessCustomerClassBookingRowChanged(this, new FitnessCustomerClassBookingRowChangeEvent(((FitnessCustomerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessCustomerClassBookingRowChanging != null)) {
//                    this.FitnessCustomerClassBookingRowChanging(this, new FitnessCustomerClassBookingRowChangeEvent(((FitnessCustomerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessCustomerClassBookingRowDeleted != null)) {
//                    this.FitnessCustomerClassBookingRowDeleted(this, new FitnessCustomerClassBookingRowChangeEvent(((FitnessCustomerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessCustomerClassBookingRowDeleting != null)) {
//                    this.FitnessCustomerClassBookingRowDeleting(this, new FitnessCustomerClassBookingRowChangeEvent(((FitnessCustomerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessCustomerClassBookingRow(FitnessCustomerClassBookingRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessCustomerClassBookingDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessLocationDataTable : global::System.Data.TypedTableBase<FitnessLocationRow> {
            
//            private global::System.Data.DataColumn columnId;
            
//            private global::System.Data.DataColumn columnName;
            
//            private global::System.Data.DataColumn columnCapacity;
            
//            private global::System.Data.DataColumn columnCenterId;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationDataTable() {
//                this.TableName = "FitnessLocation";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessLocationDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessLocationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IdColumn {
//                get {
//                    return this.columnId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn NameColumn {
//                get {
//                    return this.columnName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn CapacityColumn {
//                get {
//                    return this.columnCapacity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn CenterIdColumn {
//                get {
//                    return this.columnCenterId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRow this[int index] {
//                get {
//                    return ((FitnessLocationRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessLocationRowChangeEventHandler FitnessLocationRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessLocationRowChangeEventHandler FitnessLocationRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessLocationRowChangeEventHandler FitnessLocationRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessLocationRowChangeEventHandler FitnessLocationRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessLocationRow(FitnessLocationRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRow AddFitnessLocationRow(string Name, int Capacity, FitnessCenterRow parentFitnessCenterRowByFK_FitnessLocation_FitnessCenter_CenterId) {
//                FitnessLocationRow rowFitnessLocationRow = ((FitnessLocationRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        Name,
//                        Capacity,
//                        null};
//                if ((parentFitnessCenterRowByFK_FitnessLocation_FitnessCenter_CenterId != null)) {
//                    columnValuesArray[3] = parentFitnessCenterRowByFK_FitnessLocation_FitnessCenter_CenterId[0];
//                }
//                rowFitnessLocationRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessLocationRow);
//                return rowFitnessLocationRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRow FindById(int Id) {
//                return ((FitnessLocationRow)(this.Rows.Find(new object[] {
//                            Id})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessLocationDataTable cln = ((FitnessLocationDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessLocationDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnId = base.Columns["Id"];
//                this.columnName = base.Columns["Name"];
//                this.columnCapacity = base.Columns["Capacity"];
//                this.columnCenterId = base.Columns["CenterId"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnId);
//                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnName);
//                this.columnCapacity = new global::System.Data.DataColumn("Capacity", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCapacity);
//                this.columnCenterId = new global::System.Data.DataColumn("CenterId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCenterId);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnId}, true));
//                this.columnId.AutoIncrement = true;
//                this.columnId.AutoIncrementSeed = -1;
//                this.columnId.AutoIncrementStep = -1;
//                this.columnId.AllowDBNull = false;
//                this.columnId.ReadOnly = true;
//                this.columnId.Unique = true;
//                this.columnName.AllowDBNull = false;
//                this.columnName.MaxLength = 2147483647;
//                this.columnCapacity.AllowDBNull = false;
//                this.columnCenterId.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRow NewFitnessLocationRow() {
//                return ((FitnessLocationRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessLocationRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessLocationRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessLocationRowChanged != null)) {
//                    this.FitnessLocationRowChanged(this, new FitnessLocationRowChangeEvent(((FitnessLocationRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessLocationRowChanging != null)) {
//                    this.FitnessLocationRowChanging(this, new FitnessLocationRowChangeEvent(((FitnessLocationRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessLocationRowDeleted != null)) {
//                    this.FitnessLocationRowDeleted(this, new FitnessLocationRowChangeEvent(((FitnessLocationRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessLocationRowDeleting != null)) {
//                    this.FitnessLocationRowDeleting(this, new FitnessLocationRowChangeEvent(((FitnessLocationRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessLocationRow(FitnessLocationRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessLocationDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessSubscriptionDataTable : global::System.Data.TypedTableBase<FitnessSubscriptionRow> {
            
//            private global::System.Data.DataColumn columnName;
            
//            private global::System.Data.DataColumn columnDescription;
            
//            private global::System.Data.DataColumn columnCost;
            
//            private global::System.Data.DataColumn columnIsGroupFitness;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionDataTable() {
//                this.TableName = "FitnessSubscription";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessSubscriptionDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessSubscriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn NameColumn {
//                get {
//                    return this.columnName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn DescriptionColumn {
//                get {
//                    return this.columnDescription;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn CostColumn {
//                get {
//                    return this.columnCost;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IsGroupFitnessColumn {
//                get {
//                    return this.columnIsGroupFitness;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionRow this[int index] {
//                get {
//                    return ((FitnessSubscriptionRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessSubscriptionRowChangeEventHandler FitnessSubscriptionRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessSubscriptionRowChangeEventHandler FitnessSubscriptionRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessSubscriptionRowChangeEventHandler FitnessSubscriptionRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessSubscriptionRowChangeEventHandler FitnessSubscriptionRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessSubscriptionRow(FitnessSubscriptionRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionRow AddFitnessSubscriptionRow(string Name, string Description, decimal Cost, bool IsGroupFitness) {
//                FitnessSubscriptionRow rowFitnessSubscriptionRow = ((FitnessSubscriptionRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        Name,
//                        Description,
//                        Cost,
//                        IsGroupFitness};
//                rowFitnessSubscriptionRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessSubscriptionRow);
//                return rowFitnessSubscriptionRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionRow FindByName(string Name) {
//                return ((FitnessSubscriptionRow)(this.Rows.Find(new object[] {
//                            Name})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessSubscriptionDataTable cln = ((FitnessSubscriptionDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessSubscriptionDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnName = base.Columns["Name"];
//                this.columnDescription = base.Columns["Description"];
//                this.columnCost = base.Columns["Cost"];
//                this.columnIsGroupFitness = base.Columns["IsGroupFitness"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnName);
//                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnDescription);
//                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCost);
//                this.columnIsGroupFitness = new global::System.Data.DataColumn("IsGroupFitness", typeof(bool), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIsGroupFitness);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnName}, true));
//                this.columnName.AllowDBNull = false;
//                this.columnName.Unique = true;
//                this.columnName.MaxLength = 450;
//                this.columnDescription.AllowDBNull = false;
//                this.columnDescription.MaxLength = 500;
//                this.columnCost.AllowDBNull = false;
//                this.columnIsGroupFitness.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionRow NewFitnessSubscriptionRow() {
//                return ((FitnessSubscriptionRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessSubscriptionRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessSubscriptionRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessSubscriptionRowChanged != null)) {
//                    this.FitnessSubscriptionRowChanged(this, new FitnessSubscriptionRowChangeEvent(((FitnessSubscriptionRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessSubscriptionRowChanging != null)) {
//                    this.FitnessSubscriptionRowChanging(this, new FitnessSubscriptionRowChangeEvent(((FitnessSubscriptionRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessSubscriptionRowDeleted != null)) {
//                    this.FitnessSubscriptionRowDeleted(this, new FitnessSubscriptionRowChangeEvent(((FitnessSubscriptionRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessSubscriptionRowDeleting != null)) {
//                    this.FitnessSubscriptionRowDeleting(this, new FitnessSubscriptionRowChangeEvent(((FitnessSubscriptionRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessSubscriptionRow(FitnessSubscriptionRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessSubscriptionDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessTrainerDataTable : global::System.Data.TypedTableBase<FitnessTrainerRow> {
            
//            private global::System.Data.DataColumn columnEmail;
            
//            private global::System.Data.DataColumn columnPhone;
            
//            private global::System.Data.DataColumn columnFirstName;
            
//            private global::System.Data.DataColumn columnLastName;
            
//            private global::System.Data.DataColumn columnStreetName;
            
//            private global::System.Data.DataColumn columnStreetNumber;
            
//            private global::System.Data.DataColumn columnCity;
            
//            private global::System.Data.DataColumn columnPostalCode;
            
//            private global::System.Data.DataColumn columnJoinDate;
            
//            private global::System.Data.DataColumn columnProfileImage;
            
//            private global::System.Data.DataColumn columnId;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerDataTable() {
//                this.TableName = "FitnessTrainer";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessTrainerDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessTrainerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn EmailColumn {
//                get {
//                    return this.columnEmail;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn PhoneColumn {
//                get {
//                    return this.columnPhone;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn FirstNameColumn {
//                get {
//                    return this.columnFirstName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn LastNameColumn {
//                get {
//                    return this.columnLastName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn StreetNameColumn {
//                get {
//                    return this.columnStreetName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn StreetNumberColumn {
//                get {
//                    return this.columnStreetNumber;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn CityColumn {
//                get {
//                    return this.columnCity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn PostalCodeColumn {
//                get {
//                    return this.columnPostalCode;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn JoinDateColumn {
//                get {
//                    return this.columnJoinDate;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn ProfileImageColumn {
//                get {
//                    return this.columnProfileImage;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn IdColumn {
//                get {
//                    return this.columnId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow this[int index] {
//                get {
//                    return ((FitnessTrainerRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerRowChangeEventHandler FitnessTrainerRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerRowChangeEventHandler FitnessTrainerRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerRowChangeEventHandler FitnessTrainerRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerRowChangeEventHandler FitnessTrainerRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessTrainerRow(FitnessTrainerRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow AddFitnessTrainerRow(string Email, string Phone, string FirstName, string LastName, string StreetName, string StreetNumber, string City, string PostalCode, System.DateTime JoinDate, byte[] ProfileImage) {
//                FitnessTrainerRow rowFitnessTrainerRow = ((FitnessTrainerRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        Email,
//                        Phone,
//                        FirstName,
//                        LastName,
//                        StreetName,
//                        StreetNumber,
//                        City,
//                        PostalCode,
//                        JoinDate,
//                        ProfileImage,
//                        null};
//                rowFitnessTrainerRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessTrainerRow);
//                return rowFitnessTrainerRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow FindById(int Id) {
//                return ((FitnessTrainerRow)(this.Rows.Find(new object[] {
//                            Id})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessTrainerDataTable cln = ((FitnessTrainerDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessTrainerDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnEmail = base.Columns["Email"];
//                this.columnPhone = base.Columns["Phone"];
//                this.columnFirstName = base.Columns["FirstName"];
//                this.columnLastName = base.Columns["LastName"];
//                this.columnStreetName = base.Columns["StreetName"];
//                this.columnStreetNumber = base.Columns["StreetNumber"];
//                this.columnCity = base.Columns["City"];
//                this.columnPostalCode = base.Columns["PostalCode"];
//                this.columnJoinDate = base.Columns["JoinDate"];
//                this.columnProfileImage = base.Columns["ProfileImage"];
//                this.columnId = base.Columns["Id"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnEmail);
//                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPhone);
//                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnFirstName);
//                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnLastName);
//                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnStreetName);
//                this.columnStreetNumber = new global::System.Data.DataColumn("StreetNumber", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnStreetNumber);
//                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCity);
//                this.columnPostalCode = new global::System.Data.DataColumn("PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPostalCode);
//                this.columnJoinDate = new global::System.Data.DataColumn("JoinDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnJoinDate);
//                this.columnProfileImage = new global::System.Data.DataColumn("ProfileImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnProfileImage);
//                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnId);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnId}, true));
//                this.columnEmail.AllowDBNull = false;
//                this.columnEmail.MaxLength = 100;
//                this.columnPhone.AllowDBNull = false;
//                this.columnPhone.MaxLength = 8;
//                this.columnFirstName.AllowDBNull = false;
//                this.columnFirstName.MaxLength = 100;
//                this.columnLastName.AllowDBNull = false;
//                this.columnLastName.MaxLength = 100;
//                this.columnStreetName.AllowDBNull = false;
//                this.columnStreetName.MaxLength = 100;
//                this.columnStreetNumber.AllowDBNull = false;
//                this.columnStreetNumber.MaxLength = 4;
//                this.columnCity.AllowDBNull = false;
//                this.columnCity.MaxLength = 100;
//                this.columnPostalCode.AllowDBNull = false;
//                this.columnPostalCode.MaxLength = 7;
//                this.columnJoinDate.AllowDBNull = false;
//                this.columnId.AutoIncrement = true;
//                this.columnId.AutoIncrementSeed = -1;
//                this.columnId.AutoIncrementStep = -1;
//                this.columnId.AllowDBNull = false;
//                this.columnId.ReadOnly = true;
//                this.columnId.Unique = true;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow NewFitnessTrainerRow() {
//                return ((FitnessTrainerRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessTrainerRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessTrainerRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessTrainerRowChanged != null)) {
//                    this.FitnessTrainerRowChanged(this, new FitnessTrainerRowChangeEvent(((FitnessTrainerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessTrainerRowChanging != null)) {
//                    this.FitnessTrainerRowChanging(this, new FitnessTrainerRowChangeEvent(((FitnessTrainerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessTrainerRowDeleted != null)) {
//                    this.FitnessTrainerRowDeleted(this, new FitnessTrainerRowChangeEvent(((FitnessTrainerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessTrainerRowDeleting != null)) {
//                    this.FitnessTrainerRowDeleting(this, new FitnessTrainerRowChangeEvent(((FitnessTrainerRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessTrainerRow(FitnessTrainerRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessTrainerDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class FitnessTrainerClassBookingDataTable : global::System.Data.TypedTableBase<FitnessTrainerClassBookingRow> {
            
//            private global::System.Data.DataColumn columnClassesByTrainerId;
            
//            private global::System.Data.DataColumn columnInstructorsId;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingDataTable() {
//                this.TableName = "FitnessTrainerClassBooking";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessTrainerClassBookingDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected FitnessTrainerClassBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn ClassesByTrainerIdColumn {
//                get {
//                    return this.columnClassesByTrainerId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataColumn InstructorsIdColumn {
//                get {
//                    return this.columnInstructorsId;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRow this[int index] {
//                get {
//                    return ((FitnessTrainerClassBookingRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerClassBookingRowChangeEventHandler FitnessTrainerClassBookingRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerClassBookingRowChangeEventHandler FitnessTrainerClassBookingRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerClassBookingRowChangeEventHandler FitnessTrainerClassBookingRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public event FitnessTrainerClassBookingRowChangeEventHandler FitnessTrainerClassBookingRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void AddFitnessTrainerClassBookingRow(FitnessTrainerClassBookingRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRow AddFitnessTrainerClassBookingRow(FitnessClassRow parentFitnessClassRowByFK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId, FitnessTrainerRow parentFitnessTrainerRowByFK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId) {
//                FitnessTrainerClassBookingRow rowFitnessTrainerClassBookingRow = ((FitnessTrainerClassBookingRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        null,
//                        null};
//                if ((parentFitnessClassRowByFK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId != null)) {
//                    columnValuesArray[0] = parentFitnessClassRowByFK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId[0];
//                }
//                if ((parentFitnessTrainerRowByFK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId != null)) {
//                    columnValuesArray[1] = parentFitnessTrainerRowByFK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId[10];
//                }
//                rowFitnessTrainerClassBookingRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowFitnessTrainerClassBookingRow);
//                return rowFitnessTrainerClassBookingRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRow FindByClassesByTrainerIdInstructorsId(int ClassesByTrainerId, int InstructorsId) {
//                return ((FitnessTrainerClassBookingRow)(this.Rows.Find(new object[] {
//                            ClassesByTrainerId,
//                            InstructorsId})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                FitnessTrainerClassBookingDataTable cln = ((FitnessTrainerClassBookingDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new FitnessTrainerClassBookingDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal void InitVars() {
//                this.columnClassesByTrainerId = base.Columns["ClassesByTrainerId"];
//                this.columnInstructorsId = base.Columns["InstructorsId"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private void InitClass() {
//                this.columnClassesByTrainerId = new global::System.Data.DataColumn("ClassesByTrainerId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnClassesByTrainerId);
//                this.columnInstructorsId = new global::System.Data.DataColumn("InstructorsId", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnInstructorsId);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnClassesByTrainerId,
//                                this.columnInstructorsId}, true));
//                this.columnClassesByTrainerId.AllowDBNull = false;
//                this.columnInstructorsId.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRow NewFitnessTrainerClassBookingRow() {
//                return ((FitnessTrainerClassBookingRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new FitnessTrainerClassBookingRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(FitnessTrainerClassBookingRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.FitnessTrainerClassBookingRowChanged != null)) {
//                    this.FitnessTrainerClassBookingRowChanged(this, new FitnessTrainerClassBookingRowChangeEvent(((FitnessTrainerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.FitnessTrainerClassBookingRowChanging != null)) {
//                    this.FitnessTrainerClassBookingRowChanging(this, new FitnessTrainerClassBookingRowChangeEvent(((FitnessTrainerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.FitnessTrainerClassBookingRowDeleted != null)) {
//                    this.FitnessTrainerClassBookingRowDeleted(this, new FitnessTrainerClassBookingRowChangeEvent(((FitnessTrainerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.FitnessTrainerClassBookingRowDeleting != null)) {
//                    this.FitnessTrainerClassBookingRowDeleting(this, new FitnessTrainerClassBookingRowChangeEvent(((FitnessTrainerClassBookingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void RemoveFitnessTrainerClassBookingRow(FitnessTrainerClassBookingRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                DataSet1 ds = new DataSet1();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "FitnessTrainerClassBookingDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessAdminRow : global::System.Data.DataRow {
            
//            private FitnessAdminDataTable tableFitnessAdmin;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessAdminRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessAdmin = ((FitnessAdminDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Id {
//                get {
//                    return ((int)(this[this.tableFitnessAdmin.IdColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.IdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Email {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.EmailColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.EmailColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Phone {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.PhoneColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.PhoneColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string FirstName {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.FirstNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.FirstNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string LastName {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.LastNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.LastNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string StreetName {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.StreetNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.StreetNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string StreetNumber {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.StreetNumberColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.StreetNumberColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string City {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.CityColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.CityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string PostalCode {
//                get {
//                    return ((string)(this[this.tableFitnessAdmin.PostalCodeColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.PostalCodeColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public System.DateTime JoinDate {
//                get {
//                    return ((global::System.DateTime)(this[this.tableFitnessAdmin.JoinDateColumn]));
//                }
//                set {
//                    this[this.tableFitnessAdmin.JoinDateColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public byte[] ProfileImage {
//                get {
//                    try {
//                        return ((byte[])(this[this.tableFitnessAdmin.ProfileImageColumn]));
//                    }
//                    catch (global::System.InvalidCastException e) {
//                        throw new global::System.Data.StrongTypingException("The value for column \'ProfileImage\' in table \'FitnessAdmin\' is DBNull.", e);
//                    }
//                }
//                set {
//                    this[this.tableFitnessAdmin.ProfileImageColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public bool IsProfileImageNull() {
//                return this.IsNull(this.tableFitnessAdmin.ProfileImageColumn);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void SetProfileImageNull() {
//                this[this.tableFitnessAdmin.ProfileImageColumn] = global::System.Convert.DBNull;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow[] GetFitnessCenterRows() {
//                if ((this.Table.ChildRelations["FK_FitnessCenter_FitnessAdmin_GymLeaderId"] == null)) {
//                    return new FitnessCenterRow[0];
//                }
//                else {
//                    return ((FitnessCenterRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessCenter_FitnessAdmin_GymLeaderId"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessCenterRow : global::System.Data.DataRow {
            
//            private FitnessCenterDataTable tableFitnessCenter;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessCenterRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessCenter = ((FitnessCenterDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Id {
//                get {
//                    return ((int)(this[this.tableFitnessCenter.IdColumn]));
//                }
//                set {
//                    this[this.tableFitnessCenter.IdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int GymLeaderId {
//                get {
//                    return ((int)(this[this.tableFitnessCenter.GymLeaderIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessCenter.GymLeaderIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminRow FitnessAdminRow {
//                get {
//                    return ((FitnessAdminRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessCenter_FitnessAdmin_GymLeaderId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessCenter_FitnessAdmin_GymLeaderId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRow[] GetFitnessConceptAtCenterRows() {
//                if ((this.Table.ChildRelations["FK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId"] == null)) {
//                    return new FitnessConceptAtCenterRow[0];
//                }
//                else {
//                    return ((FitnessConceptAtCenterRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId"])));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRow[] GetFitnessLocationRows() {
//                if ((this.Table.ChildRelations["FK_FitnessLocation_FitnessCenter_CenterId"] == null)) {
//                    return new FitnessLocationRow[0];
//                }
//                else {
//                    return ((FitnessLocationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessLocation_FitnessCenter_CenterId"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessClassRow : global::System.Data.DataRow {
            
//            private FitnessClassDataTable tableFitnessClass;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessClassRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessClass = ((FitnessClassDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Id {
//                get {
//                    return ((int)(this[this.tableFitnessClass.IdColumn]));
//                }
//                set {
//                    this[this.tableFitnessClass.IdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int LocationId {
//                get {
//                    return ((int)(this[this.tableFitnessClass.LocationIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessClass.LocationIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int ConceptId {
//                get {
//                    return ((int)(this[this.tableFitnessClass.ConceptIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessClass.ConceptIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public System.DateTime Start {
//                get {
//                    return ((global::System.DateTime)(this[this.tableFitnessClass.StartColumn]));
//                }
//                set {
//                    this[this.tableFitnessClass.StartColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public System.DateTime End {
//                get {
//                    return ((global::System.DateTime)(this[this.tableFitnessClass.EndColumn]));
//                }
//                set {
//                    this[this.tableFitnessClass.EndColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow FitnessConceptRow {
//                get {
//                    return ((FitnessConceptRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessClass_FitnessConcept_ConceptId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessClass_FitnessConcept_ConceptId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRow FitnessLocationRow {
//                get {
//                    return ((FitnessLocationRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessClass_FitnessLocation_LocationId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessClass_FitnessLocation_LocationId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRow[] GetFitnessCustomerClassBookingRows() {
//                if ((this.Table.ChildRelations["FK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId"] == null)) {
//                    return new FitnessCustomerClassBookingRow[0];
//                }
//                else {
//                    return ((FitnessCustomerClassBookingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId"])));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRow[] GetFitnessTrainerClassBookingRows() {
//                if ((this.Table.ChildRelations["FK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId"] == null)) {
//                    return new FitnessTrainerClassBookingRow[0];
//                }
//                else {
//                    return ((FitnessTrainerClassBookingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessConceptRow : global::System.Data.DataRow {
            
//            private FitnessConceptDataTable tableFitnessConcept;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessConceptRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessConcept = ((FitnessConceptDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Id {
//                get {
//                    return ((int)(this[this.tableFitnessConcept.IdColumn]));
//                }
//                set {
//                    this[this.tableFitnessConcept.IdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Name {
//                get {
//                    return ((string)(this[this.tableFitnessConcept.NameColumn]));
//                }
//                set {
//                    this[this.tableFitnessConcept.NameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Description {
//                get {
//                    return ((string)(this[this.tableFitnessConcept.DescriptionColumn]));
//                }
//                set {
//                    this[this.tableFitnessConcept.DescriptionColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public System.TimeSpan Duration {
//                get {
//                    return ((global::System.TimeSpan)(this[this.tableFitnessConcept.DurationColumn]));
//                }
//                set {
//                    this[this.tableFitnessConcept.DurationColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int TrainerId {
//                get {
//                    try {
//                        return ((int)(this[this.tableFitnessConcept.TrainerIdColumn]));
//                    }
//                    catch (global::System.InvalidCastException e) {
//                        throw new global::System.Data.StrongTypingException("The value for column \'TrainerId\' in table \'FitnessConcept\' is DBNull.", e);
//                    }
//                }
//                set {
//                    this[this.tableFitnessConcept.TrainerIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow FitnessTrainerRow {
//                get {
//                    return ((FitnessTrainerRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessConcept_FitnessTrainer_TrainerId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessConcept_FitnessTrainer_TrainerId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public bool IsTrainerIdNull() {
//                return this.IsNull(this.tableFitnessConcept.TrainerIdColumn);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void SetTrainerIdNull() {
//                this[this.tableFitnessConcept.TrainerIdColumn] = global::System.Convert.DBNull;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow[] GetFitnessClassRows() {
//                if ((this.Table.ChildRelations["FK_FitnessClass_FitnessConcept_ConceptId"] == null)) {
//                    return new FitnessClassRow[0];
//                }
//                else {
//                    return ((FitnessClassRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessClass_FitnessConcept_ConceptId"])));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRow[] GetFitnessConceptAtCenterRows() {
//                if ((this.Table.ChildRelations["FK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId"] == null)) {
//                    return new FitnessConceptAtCenterRow[0];
//                }
//                else {
//                    return ((FitnessConceptAtCenterRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessConceptAtCenterRow : global::System.Data.DataRow {
            
//            private FitnessConceptAtCenterDataTable tableFitnessConceptAtCenter;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessConceptAtCenterRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessConceptAtCenter = ((FitnessConceptAtCenterDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int AvailableConceptsId {
//                get {
//                    return ((int)(this[this.tableFitnessConceptAtCenter.AvailableConceptsIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessConceptAtCenter.AvailableConceptsIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int CentersWithConceptId {
//                get {
//                    return ((int)(this[this.tableFitnessConceptAtCenter.CentersWithConceptIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessConceptAtCenter.CentersWithConceptIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow FitnessCenterRow {
//                get {
//                    return ((FitnessCenterRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessConceptAtCenter_FitnessCenter_CentersWithConceptId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow FitnessConceptRow {
//                get {
//                    return ((FitnessConceptRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessConceptAtCenter_FitnessConcept_AvailableConceptsId"]);
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessCustomerRow : global::System.Data.DataRow {
            
//            private FitnessCustomerDataTable tableFitnessCustomer;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessCustomerRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessCustomer = ((FitnessCustomerDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Id {
//                get {
//                    return ((int)(this[this.tableFitnessCustomer.IdColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.IdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string SubscriptionName {
//                get {
//                    try {
//                        return ((string)(this[this.tableFitnessCustomer.SubscriptionNameColumn]));
//                    }
//                    catch (global::System.InvalidCastException e) {
//                        throw new global::System.Data.StrongTypingException("The value for column \'SubscriptionName\' in table \'FitnessCustomer\' is DBNull.", e);
//                    }
//                }
//                set {
//                    this[this.tableFitnessCustomer.SubscriptionNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int TrainerId {
//                get {
//                    try {
//                        return ((int)(this[this.tableFitnessCustomer.TrainerIdColumn]));
//                    }
//                    catch (global::System.InvalidCastException e) {
//                        throw new global::System.Data.StrongTypingException("The value for column \'TrainerId\' in table \'FitnessCustomer\' is DBNull.", e);
//                    }
//                }
//                set {
//                    this[this.tableFitnessCustomer.TrainerIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Email {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.EmailColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.EmailColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Phone {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.PhoneColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.PhoneColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string FirstName {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.FirstNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.FirstNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string LastName {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.LastNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.LastNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string StreetName {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.StreetNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.StreetNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string StreetNumber {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.StreetNumberColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.StreetNumberColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string City {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.CityColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.CityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string PostalCode {
//                get {
//                    return ((string)(this[this.tableFitnessCustomer.PostalCodeColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.PostalCodeColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public System.DateTime JoinDate {
//                get {
//                    return ((global::System.DateTime)(this[this.tableFitnessCustomer.JoinDateColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomer.JoinDateColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public byte[] ProfileImage {
//                get {
//                    try {
//                        return ((byte[])(this[this.tableFitnessCustomer.ProfileImageColumn]));
//                    }
//                    catch (global::System.InvalidCastException e) {
//                        throw new global::System.Data.StrongTypingException("The value for column \'ProfileImage\' in table \'FitnessCustomer\' is DBNull.", e);
//                    }
//                }
//                set {
//                    this[this.tableFitnessCustomer.ProfileImageColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionRow FitnessSubscriptionRow {
//                get {
//                    return ((FitnessSubscriptionRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessCustomer_FitnessSubscription_SubscriptionName"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessCustomer_FitnessSubscription_SubscriptionName"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow FitnessTrainerRow {
//                get {
//                    return ((FitnessTrainerRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessCustomer_FitnessTrainer_TrainerId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessCustomer_FitnessTrainer_TrainerId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public bool IsSubscriptionNameNull() {
//                return this.IsNull(this.tableFitnessCustomer.SubscriptionNameColumn);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void SetSubscriptionNameNull() {
//                this[this.tableFitnessCustomer.SubscriptionNameColumn] = global::System.Convert.DBNull;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public bool IsTrainerIdNull() {
//                return this.IsNull(this.tableFitnessCustomer.TrainerIdColumn);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void SetTrainerIdNull() {
//                this[this.tableFitnessCustomer.TrainerIdColumn] = global::System.Convert.DBNull;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public bool IsProfileImageNull() {
//                return this.IsNull(this.tableFitnessCustomer.ProfileImageColumn);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void SetProfileImageNull() {
//                this[this.tableFitnessCustomer.ProfileImageColumn] = global::System.Convert.DBNull;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRow[] GetFitnessCustomerClassBookingRows() {
//                if ((this.Table.ChildRelations["FK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId"] == null)) {
//                    return new FitnessCustomerClassBookingRow[0];
//                }
//                else {
//                    return ((FitnessCustomerClassBookingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessCustomerClassBookingRow : global::System.Data.DataRow {
            
//            private FitnessCustomerClassBookingDataTable tableFitnessCustomerClassBooking;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessCustomerClassBookingRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessCustomerClassBooking = ((FitnessCustomerClassBookingDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int BookedClassesId {
//                get {
//                    return ((int)(this[this.tableFitnessCustomerClassBooking.BookedClassesIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomerClassBooking.BookedClassesIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int BookedParticipantsId {
//                get {
//                    return ((int)(this[this.tableFitnessCustomerClassBooking.BookedParticipantsIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessCustomerClassBooking.BookedParticipantsIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow FitnessClassRow {
//                get {
//                    return ((FitnessClassRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessCustomerClassBooking_FitnessClass_BookedClassesId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow FitnessCustomerRow {
//                get {
//                    return ((FitnessCustomerRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessCustomerClassBooking_FitnessCustomer_BookedParticipantsId"]);
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessLocationRow : global::System.Data.DataRow {
            
//            private FitnessLocationDataTable tableFitnessLocation;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessLocationRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessLocation = ((FitnessLocationDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Id {
//                get {
//                    return ((int)(this[this.tableFitnessLocation.IdColumn]));
//                }
//                set {
//                    this[this.tableFitnessLocation.IdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Name {
//                get {
//                    return ((string)(this[this.tableFitnessLocation.NameColumn]));
//                }
//                set {
//                    this[this.tableFitnessLocation.NameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Capacity {
//                get {
//                    return ((int)(this[this.tableFitnessLocation.CapacityColumn]));
//                }
//                set {
//                    this[this.tableFitnessLocation.CapacityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int CenterId {
//                get {
//                    return ((int)(this[this.tableFitnessLocation.CenterIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessLocation.CenterIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow FitnessCenterRow {
//                get {
//                    return ((FitnessCenterRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessLocation_FitnessCenter_CenterId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessLocation_FitnessCenter_CenterId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow[] GetFitnessClassRows() {
//                if ((this.Table.ChildRelations["FK_FitnessClass_FitnessLocation_LocationId"] == null)) {
//                    return new FitnessClassRow[0];
//                }
//                else {
//                    return ((FitnessClassRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessClass_FitnessLocation_LocationId"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessSubscriptionRow : global::System.Data.DataRow {
            
//            private FitnessSubscriptionDataTable tableFitnessSubscription;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessSubscriptionRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessSubscription = ((FitnessSubscriptionDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Name {
//                get {
//                    return ((string)(this[this.tableFitnessSubscription.NameColumn]));
//                }
//                set {
//                    this[this.tableFitnessSubscription.NameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Description {
//                get {
//                    return ((string)(this[this.tableFitnessSubscription.DescriptionColumn]));
//                }
//                set {
//                    this[this.tableFitnessSubscription.DescriptionColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public decimal Cost {
//                get {
//                    return ((decimal)(this[this.tableFitnessSubscription.CostColumn]));
//                }
//                set {
//                    this[this.tableFitnessSubscription.CostColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public bool IsGroupFitness {
//                get {
//                    return ((bool)(this[this.tableFitnessSubscription.IsGroupFitnessColumn]));
//                }
//                set {
//                    this[this.tableFitnessSubscription.IsGroupFitnessColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow[] GetFitnessCustomerRows() {
//                if ((this.Table.ChildRelations["FK_FitnessCustomer_FitnessSubscription_SubscriptionName"] == null)) {
//                    return new FitnessCustomerRow[0];
//                }
//                else {
//                    return ((FitnessCustomerRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessCustomer_FitnessSubscription_SubscriptionName"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessTrainerRow : global::System.Data.DataRow {
            
//            private FitnessTrainerDataTable tableFitnessTrainer;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessTrainerRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessTrainer = ((FitnessTrainerDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Email {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.EmailColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.EmailColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string Phone {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.PhoneColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.PhoneColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string FirstName {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.FirstNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.FirstNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string LastName {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.LastNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.LastNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string StreetName {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.StreetNameColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.StreetNameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string StreetNumber {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.StreetNumberColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.StreetNumberColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string City {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.CityColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.CityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public string PostalCode {
//                get {
//                    return ((string)(this[this.tableFitnessTrainer.PostalCodeColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.PostalCodeColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public System.DateTime JoinDate {
//                get {
//                    return ((global::System.DateTime)(this[this.tableFitnessTrainer.JoinDateColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.JoinDateColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public byte[] ProfileImage {
//                get {
//                    try {
//                        return ((byte[])(this[this.tableFitnessTrainer.ProfileImageColumn]));
//                    }
//                    catch (global::System.InvalidCastException e) {
//                        throw new global::System.Data.StrongTypingException("The value for column \'ProfileImage\' in table \'FitnessTrainer\' is DBNull.", e);
//                    }
//                }
//                set {
//                    this[this.tableFitnessTrainer.ProfileImageColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Id {
//                get {
//                    return ((int)(this[this.tableFitnessTrainer.IdColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainer.IdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public bool IsProfileImageNull() {
//                return this.IsNull(this.tableFitnessTrainer.ProfileImageColumn);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public void SetProfileImageNull() {
//                this[this.tableFitnessTrainer.ProfileImageColumn] = global::System.Convert.DBNull;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow[] GetFitnessConceptRows() {
//                if ((this.Table.ChildRelations["FK_FitnessConcept_FitnessTrainer_TrainerId"] == null)) {
//                    return new FitnessConceptRow[0];
//                }
//                else {
//                    return ((FitnessConceptRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessConcept_FitnessTrainer_TrainerId"])));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow[] GetFitnessCustomerRows() {
//                if ((this.Table.ChildRelations["FK_FitnessCustomer_FitnessTrainer_TrainerId"] == null)) {
//                    return new FitnessCustomerRow[0];
//                }
//                else {
//                    return ((FitnessCustomerRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessCustomer_FitnessTrainer_TrainerId"])));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRow[] GetFitnessTrainerClassBookingRows() {
//                if ((this.Table.ChildRelations["FK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId"] == null)) {
//                    return new FitnessTrainerClassBookingRow[0];
//                }
//                else {
//                    return ((FitnessTrainerClassBookingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class FitnessTrainerClassBookingRow : global::System.Data.DataRow {
            
//            private FitnessTrainerClassBookingDataTable tableFitnessTrainerClassBooking;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal FitnessTrainerClassBookingRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableFitnessTrainerClassBooking = ((FitnessTrainerClassBookingDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int ClassesByTrainerId {
//                get {
//                    return ((int)(this[this.tableFitnessTrainerClassBooking.ClassesByTrainerIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainerClassBooking.ClassesByTrainerIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int InstructorsId {
//                get {
//                    return ((int)(this[this.tableFitnessTrainerClassBooking.InstructorsIdColumn]));
//                }
//                set {
//                    this[this.tableFitnessTrainerClassBooking.InstructorsIdColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow FitnessClassRow {
//                get {
//                    return ((FitnessClassRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessTrainerClassBooking_FitnessClass_ClassesByTrainerId"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow FitnessTrainerRow {
//                get {
//                    return ((FitnessTrainerRow)(this.GetParentRow(this.Table.ParentRelations["FK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_FitnessTrainerClassBooking_FitnessTrainer_InstructorsId"]);
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessAdminRowChangeEvent : global::System.EventArgs {
            
//            private FitnessAdminRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminRowChangeEvent(FitnessAdminRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessAdminRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessCenterRowChangeEvent : global::System.EventArgs {
            
//            private FitnessCenterRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRowChangeEvent(FitnessCenterRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCenterRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessClassRowChangeEvent : global::System.EventArgs {
            
//            private FitnessClassRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRowChangeEvent(FitnessClassRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessClassRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessConceptRowChangeEvent : global::System.EventArgs {
            
//            private FitnessConceptRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRowChangeEvent(FitnessConceptRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessConceptAtCenterRowChangeEvent : global::System.EventArgs {
            
//            private FitnessConceptAtCenterRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRowChangeEvent(FitnessConceptAtCenterRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessConceptAtCenterRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessCustomerRowChangeEvent : global::System.EventArgs {
            
//            private FitnessCustomerRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRowChangeEvent(FitnessCustomerRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessCustomerClassBookingRowChangeEvent : global::System.EventArgs {
            
//            private FitnessCustomerClassBookingRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRowChangeEvent(FitnessCustomerClassBookingRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessCustomerClassBookingRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessLocationRowChangeEvent : global::System.EventArgs {
            
//            private FitnessLocationRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRowChangeEvent(FitnessLocationRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessLocationRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessSubscriptionRowChangeEvent : global::System.EventArgs {
            
//            private FitnessSubscriptionRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionRowChangeEvent(FitnessSubscriptionRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessSubscriptionRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessTrainerRowChangeEvent : global::System.EventArgs {
            
//            private FitnessTrainerRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRowChangeEvent(FitnessTrainerRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public class FitnessTrainerClassBookingRowChangeEvent : global::System.EventArgs {
            
//            private FitnessTrainerClassBookingRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRowChangeEvent(FitnessTrainerClassBookingRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public FitnessTrainerClassBookingRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
//    }
//}
//namespace AsyncFitness.Infrastructure.DbContexts.DataSet1TableAdapters {
    
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessAdminTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessAdminTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessAdmin";
//            tableMapping.ColumnMappings.Add("Id", "Id");
//            tableMapping.ColumnMappings.Add("Email", "Email");
//            tableMapping.ColumnMappings.Add("Phone", "Phone");
//            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
//            tableMapping.ColumnMappings.Add("LastName", "LastName");
//            tableMapping.ColumnMappings.Add("StreetName", "StreetName");
//            tableMapping.ColumnMappings.Add("StreetNumber", "StreetNumber");
//            tableMapping.ColumnMappings.Add("City", "City");
//            tableMapping.ColumnMappings.Add("PostalCode", "PostalCode");
//            tableMapping.ColumnMappings.Add("JoinDate", "JoinDate");
//            tableMapping.ColumnMappings.Add("ProfileImage", "ProfileImage");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FitnessAdmin] WHERE (([Id] = @Original_Id) AND ([Email] = @Original_Email) AND ([Phone] = @Original_Phone) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([StreetName] = @Original_StreetName) AND ([StreetNumber] = @Original_StreetNumber) AND ([City] = @Original_City) AND ([PostalCode] = @Original_PostalCode) AND ([JoinDate] = @Original_JoinDate))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FitnessAdmin] ([Email], [Phone], [FirstName], [LastName], [StreetName], [StreetNumber], [City], [PostalCode], [JoinDate], [ProfileImage]) VALUES (@Email, @Phone, @FirstName, @LastName, @StreetName, @StreetNumber, @City, @PostalCode, @JoinDate, @ProfileImage);
//SELECT Id, Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage FROM FitnessAdmin WHERE (Id = SCOPE_IDENTITY())";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfileImage", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfileImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessAdmin] SET [Email] = @Email, [Phone] = @Phone, [FirstName] = @FirstName, [LastName] = @LastName, [StreetName] = @StreetName, [StreetNumber] = @StreetNumber, [City] = @City, [PostalCode] = @PostalCode, [JoinDate] = @JoinDate, [ProfileImage] = @ProfileImage WHERE (([Id] = @Original_Id) AND ([Email] = @Original_Email) AND ([Phone] = @Original_Phone) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([StreetName] = @Original_StreetName) AND ([StreetNumber] = @Original_StreetNumber) AND ([City] = @Original_City) AND ([PostalCode] = @Original_PostalCode) AND ([JoinDate] = @Original_JoinDate));
//SELECT Id, Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage FROM FitnessAdmin WHERE (Id = @Id)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfileImage", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfileImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Id, Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, Pos" +
//                "talCode, JoinDate, ProfileImage FROM dbo.FitnessAdmin";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessAdminDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessAdminDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessAdminDataTable dataTable = new DataSet1.FitnessAdminDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessAdminDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessAdmin");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_Id, string Original_Email, string Original_Phone, string Original_FirstName, string Original_LastName, string Original_StreetName, string Original_StreetNumber, string Original_City, string Original_PostalCode, System.DateTime Original_JoinDate) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
//            if ((Original_Email == null)) {
//                throw new global::System.ArgumentNullException("Original_Email");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Email));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Phone));
//            }
//            if ((Original_FirstName == null)) {
//                throw new global::System.ArgumentNullException("Original_FirstName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_FirstName));
//            }
//            if ((Original_LastName == null)) {
//                throw new global::System.ArgumentNullException("Original_LastName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LastName));
//            }
//            if ((Original_StreetName == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_StreetName));
//            }
//            if ((Original_StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetNumber");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_StreetNumber));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_City));
//            }
//            if ((Original_PostalCode == null)) {
//                throw new global::System.ArgumentNullException("Original_PostalCode");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PostalCode));
//            }
//            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_JoinDate));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(string Email, string Phone, string FirstName, string LastName, string StreetName, string StreetNumber, string City, string PostalCode, System.DateTime JoinDate, byte[] ProfileImage) {
//            if ((Email == null)) {
//                throw new global::System.ArgumentNullException("Email");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Email));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Phone));
//            }
//            if ((FirstName == null)) {
//                throw new global::System.ArgumentNullException("FirstName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FirstName));
//            }
//            if ((LastName == null)) {
//                throw new global::System.ArgumentNullException("LastName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LastName));
//            }
//            if ((StreetName == null)) {
//                throw new global::System.ArgumentNullException("StreetName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(StreetName));
//            }
//            if ((StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("StreetNumber");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(StreetNumber));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(City));
//            }
//            if ((PostalCode == null)) {
//                throw new global::System.ArgumentNullException("PostalCode");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PostalCode));
//            }
//            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(JoinDate));
//            if ((ProfileImage == null)) {
//                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(ProfileImage));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(
//                    string Email, 
//                    string Phone, 
//                    string FirstName, 
//                    string LastName, 
//                    string StreetName, 
//                    string StreetNumber, 
//                    string City, 
//                    string PostalCode, 
//                    System.DateTime JoinDate, 
//                    byte[] ProfileImage, 
//                    int Original_Id, 
//                    string Original_Email, 
//                    string Original_Phone, 
//                    string Original_FirstName, 
//                    string Original_LastName, 
//                    string Original_StreetName, 
//                    string Original_StreetNumber, 
//                    string Original_City, 
//                    string Original_PostalCode, 
//                    System.DateTime Original_JoinDate, 
//                    int Id) {
//            if ((Email == null)) {
//                throw new global::System.ArgumentNullException("Email");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Email));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Phone));
//            }
//            if ((FirstName == null)) {
//                throw new global::System.ArgumentNullException("FirstName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FirstName));
//            }
//            if ((LastName == null)) {
//                throw new global::System.ArgumentNullException("LastName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LastName));
//            }
//            if ((StreetName == null)) {
//                throw new global::System.ArgumentNullException("StreetName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(StreetName));
//            }
//            if ((StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("StreetNumber");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(StreetNumber));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(City));
//            }
//            if ((PostalCode == null)) {
//                throw new global::System.ArgumentNullException("PostalCode");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PostalCode));
//            }
//            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(JoinDate));
//            if ((ProfileImage == null)) {
//                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(ProfileImage));
//            }
//            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Id));
//            if ((Original_Email == null)) {
//                throw new global::System.ArgumentNullException("Original_Email");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Email));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Phone));
//            }
//            if ((Original_FirstName == null)) {
//                throw new global::System.ArgumentNullException("Original_FirstName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_FirstName));
//            }
//            if ((Original_LastName == null)) {
//                throw new global::System.ArgumentNullException("Original_LastName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_LastName));
//            }
//            if ((Original_StreetName == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_StreetName));
//            }
//            if ((Original_StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetNumber");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_StreetNumber));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_City));
//            }
//            if ((Original_PostalCode == null)) {
//                throw new global::System.ArgumentNullException("Original_PostalCode");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PostalCode));
//            }
//            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_JoinDate));
//            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(
//                    string Email, 
//                    string Phone, 
//                    string FirstName, 
//                    string LastName, 
//                    string StreetName, 
//                    string StreetNumber, 
//                    string City, 
//                    string PostalCode, 
//                    System.DateTime JoinDate, 
//                    byte[] ProfileImage, 
//                    int Original_Id, 
//                    string Original_Email, 
//                    string Original_Phone, 
//                    string Original_FirstName, 
//                    string Original_LastName, 
//                    string Original_StreetName, 
//                    string Original_StreetNumber, 
//                    string Original_City, 
//                    string Original_PostalCode, 
//                    System.DateTime Original_JoinDate) {
//            return this.Update(Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage, Original_Id, Original_Email, Original_Phone, Original_FirstName, Original_LastName, Original_StreetName, Original_StreetNumber, Original_City, Original_PostalCode, Original_JoinDate, Original_Id);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessCenterTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessCenterTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessCenter";
//            tableMapping.ColumnMappings.Add("Id", "Id");
//            tableMapping.ColumnMappings.Add("GymLeaderId", "GymLeaderId");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FitnessCenter] WHERE (([Id] = @Original_Id) AND ([GymLeaderId]" +
//                " = @Original_GymLeaderId))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GymLeaderId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GymLeaderId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FitnessCenter] ([GymLeaderId]) VALUES (@GymLeaderId);\r\nSELECT " +
//                "Id, GymLeaderId FROM FitnessCenter WHERE (Id = SCOPE_IDENTITY())";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GymLeaderId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GymLeaderId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[FitnessCenter] SET [GymLeaderId] = @GymLeaderId WHERE (([Id] = @Ori" +
//                "ginal_Id) AND ([GymLeaderId] = @Original_GymLeaderId));\r\nSELECT Id, GymLeaderId " +
//                "FROM FitnessCenter WHERE (Id = @Id)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GymLeaderId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GymLeaderId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GymLeaderId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GymLeaderId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Id, GymLeaderId FROM dbo.FitnessCenter";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessCenterDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessCenterDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessCenterDataTable dataTable = new DataSet1.FitnessCenterDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessCenterDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessCenter");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_Id, int Original_GymLeaderId) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_GymLeaderId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int GymLeaderId) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(GymLeaderId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int GymLeaderId, int Original_Id, int Original_GymLeaderId, int Id) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(GymLeaderId));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_GymLeaderId));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int GymLeaderId, int Original_Id, int Original_GymLeaderId) {
//            return this.Update(GymLeaderId, Original_Id, Original_GymLeaderId, Original_Id);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessClassTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessClassTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessClass";
//            tableMapping.ColumnMappings.Add("Id", "Id");
//            tableMapping.ColumnMappings.Add("LocationId", "LocationId");
//            tableMapping.ColumnMappings.Add("ConceptId", "ConceptId");
//            tableMapping.ColumnMappings.Add("Start", "Start");
//            tableMapping.ColumnMappings.Add("End", "End");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FitnessClass] WHERE (([Id] = @Original_Id) AND ([LocationId] =" +
//                " @Original_LocationId) AND ([ConceptId] = @Original_ConceptId) AND ([Start] = @O" +
//                "riginal_Start) AND ([End] = @Original_End))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_End", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FitnessClass] ([LocationId], [ConceptId], [Start], [End]) VALU" +
//                "ES (@LocationId, @ConceptId, @Start, @End);\r\nSELECT Id, LocationId, ConceptId, S" +
//                "tart, [End] FROM FitnessClass WHERE (Id = SCOPE_IDENTITY())";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@End", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessClass] SET [LocationId] = @LocationId, [ConceptId] = @ConceptId, [Start] = @Start, [End] = @End WHERE (([Id] = @Original_Id) AND ([LocationId] = @Original_LocationId) AND ([ConceptId] = @Original_ConceptId) AND ([Start] = @Original_Start) AND ([End] = @Original_End));
//SELECT Id, LocationId, ConceptId, Start, [End] FROM FitnessClass WHERE (Id = @Id)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@End", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConceptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_End", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Id, LocationId, ConceptId, Start, [End] FROM dbo.FitnessClass";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessClassDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessClassDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessClassDataTable dataTable = new DataSet1.FitnessClassDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessClassDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessClass");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_Id, int Original_LocationId, int Original_ConceptId, System.DateTime Original_Start, System.DateTime Original_End) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_LocationId));
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ConceptId));
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Start));
//            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_End));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int LocationId, int ConceptId, System.DateTime Start, System.DateTime End) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LocationId));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ConceptId));
//            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Start));
//            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(End));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int LocationId, int ConceptId, System.DateTime Start, System.DateTime End, int Original_Id, int Original_LocationId, int Original_ConceptId, System.DateTime Original_Start, System.DateTime Original_End, int Id) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LocationId));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ConceptId));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Start));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(End));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Id));
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_LocationId));
//            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ConceptId));
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_Start));
//            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_End));
//            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int LocationId, int ConceptId, System.DateTime Start, System.DateTime End, int Original_Id, int Original_LocationId, int Original_ConceptId, System.DateTime Original_Start, System.DateTime Original_End) {
//            return this.Update(LocationId, ConceptId, Start, End, Original_Id, Original_LocationId, Original_ConceptId, Original_Start, Original_End, Original_Id);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessConceptTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessConceptTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessConcept";
//            tableMapping.ColumnMappings.Add("Id", "Id");
//            tableMapping.ColumnMappings.Add("Name", "Name");
//            tableMapping.ColumnMappings.Add("Description", "Description");
//            tableMapping.ColumnMappings.Add("Duration", "Duration");
//            tableMapping.ColumnMappings.Add("TrainerId", "TrainerId");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FitnessConcept] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([Description] = @Original_Description) AND ([Duration] = @Original_Duration) AND ((@IsNull_TrainerId = 1 AND [TrainerId] IS NULL) OR ([TrainerId] = @Original_TrainerId)))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Duration", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FitnessConcept] ([Name], [Description], [Duration], [TrainerId" +
//                "]) VALUES (@Name, @Description, @Duration, @TrainerId);\r\nSELECT Id, Name, Descri" +
//                "ption, Duration, TrainerId FROM FitnessConcept WHERE (Id = SCOPE_IDENTITY())";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duration", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessConcept] SET [Name] = @Name, [Description] = @Description, [Duration] = @Duration, [TrainerId] = @TrainerId WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([Description] = @Original_Description) AND ([Duration] = @Original_Duration) AND ((@IsNull_TrainerId = 1 AND [TrainerId] IS NULL) OR ([TrainerId] = @Original_TrainerId)));
//SELECT Id, Name, Description, Duration, TrainerId FROM FitnessConcept WHERE (Id = @Id)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duration", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Duration", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Id, Name, Description, Duration, TrainerId FROM dbo.FitnessConcept";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessConceptDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessConceptDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessConceptDataTable dataTable = new DataSet1.FitnessConceptDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessConceptDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessConcept");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_Id, string Original_Name, string Original_Description, System.TimeSpan Original_Duration, global::System.Nullable<int> Original_TrainerId) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));
//            }
//            if ((Original_Description == null)) {
//                throw new global::System.ArgumentNullException("Original_Description");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Description));
//            }
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.TimeSpan)(Original_Duration));
//            if ((Original_TrainerId.HasValue == true)) {
//                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
//                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_TrainerId.Value));
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
//                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(string Name, string Description, System.TimeSpan Duration, global::System.Nullable<int> TrainerId) {
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
//            }
//            if ((Description == null)) {
//                throw new global::System.ArgumentNullException("Description");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Description));
//            }
//            this.Adapter.InsertCommand.Parameters[2].Value = ((System.TimeSpan)(Duration));
//            if ((TrainerId.HasValue == true)) {
//                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(TrainerId.Value));
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Name, string Description, System.TimeSpan Duration, global::System.Nullable<int> TrainerId, int Original_Id, string Original_Name, string Original_Description, System.TimeSpan Original_Duration, global::System.Nullable<int> Original_TrainerId, int Id) {
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
//            }
//            if ((Description == null)) {
//                throw new global::System.ArgumentNullException("Description");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Description));
//            }
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.TimeSpan)(Duration));
//            if ((TrainerId.HasValue == true)) {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(TrainerId.Value));
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
//            }
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Id));
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Name));
//            }
//            if ((Original_Description == null)) {
//                throw new global::System.ArgumentNullException("Original_Description");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Description));
//            }
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.TimeSpan)(Original_Duration));
//            if ((Original_TrainerId.HasValue == true)) {
//                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
//                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_TrainerId.Value));
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
//                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
//            }
//            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Name, string Description, System.TimeSpan Duration, global::System.Nullable<int> TrainerId, int Original_Id, string Original_Name, string Original_Description, System.TimeSpan Original_Duration, global::System.Nullable<int> Original_TrainerId) {
//            return this.Update(Name, Description, Duration, TrainerId, Original_Id, Original_Name, Original_Description, Original_Duration, Original_TrainerId, Original_Id);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessConceptAtCenterTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessConceptAtCenterTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessConceptAtCenter";
//            tableMapping.ColumnMappings.Add("AvailableConceptsId", "AvailableConceptsId");
//            tableMapping.ColumnMappings.Add("CentersWithConceptId", "CentersWithConceptId");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FitnessConceptAtCenter] WHERE (([AvailableConceptsId] = @Origi" +
//                "nal_AvailableConceptsId) AND ([CentersWithConceptId] = @Original_CentersWithConc" +
//                "eptId))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AvailableConceptsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableConceptsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CentersWithConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CentersWithConceptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FitnessConceptAtCenter] ([AvailableConceptsId], [CentersWithConceptId]) VALUES (@AvailableConceptsId, @CentersWithConceptId);
//SELECT AvailableConceptsId, CentersWithConceptId FROM FitnessConceptAtCenter WHERE (AvailableConceptsId = @AvailableConceptsId) AND (CentersWithConceptId = @CentersWithConceptId)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AvailableConceptsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableConceptsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CentersWithConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CentersWithConceptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessConceptAtCenter] SET [AvailableConceptsId] = @AvailableConceptsId, [CentersWithConceptId] = @CentersWithConceptId WHERE (([AvailableConceptsId] = @Original_AvailableConceptsId) AND ([CentersWithConceptId] = @Original_CentersWithConceptId));
//SELECT AvailableConceptsId, CentersWithConceptId FROM FitnessConceptAtCenter WHERE (AvailableConceptsId = @AvailableConceptsId) AND (CentersWithConceptId = @CentersWithConceptId)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AvailableConceptsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableConceptsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CentersWithConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CentersWithConceptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AvailableConceptsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableConceptsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CentersWithConceptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CentersWithConceptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT AvailableConceptsId, CentersWithConceptId FROM dbo.FitnessConceptAtCenter";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessConceptAtCenterDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessConceptAtCenterDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessConceptAtCenterDataTable dataTable = new DataSet1.FitnessConceptAtCenterDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessConceptAtCenterDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessConceptAtCenter");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_AvailableConceptsId, int Original_CentersWithConceptId) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AvailableConceptsId));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_CentersWithConceptId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int AvailableConceptsId, int CentersWithConceptId) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(AvailableConceptsId));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CentersWithConceptId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int AvailableConceptsId, int CentersWithConceptId, int Original_AvailableConceptsId, int Original_CentersWithConceptId) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(AvailableConceptsId));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CentersWithConceptId));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_AvailableConceptsId));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_CentersWithConceptId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int Original_AvailableConceptsId, int Original_CentersWithConceptId) {
//            return this.Update(Original_AvailableConceptsId, Original_CentersWithConceptId, Original_AvailableConceptsId, Original_CentersWithConceptId);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessCustomerTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessCustomerTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessCustomer";
//            tableMapping.ColumnMappings.Add("Id", "Id");
//            tableMapping.ColumnMappings.Add("SubscriptionName", "SubscriptionName");
//            tableMapping.ColumnMappings.Add("TrainerId", "TrainerId");
//            tableMapping.ColumnMappings.Add("Email", "Email");
//            tableMapping.ColumnMappings.Add("Phone", "Phone");
//            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
//            tableMapping.ColumnMappings.Add("LastName", "LastName");
//            tableMapping.ColumnMappings.Add("StreetName", "StreetName");
//            tableMapping.ColumnMappings.Add("StreetNumber", "StreetNumber");
//            tableMapping.ColumnMappings.Add("City", "City");
//            tableMapping.ColumnMappings.Add("PostalCode", "PostalCode");
//            tableMapping.ColumnMappings.Add("JoinDate", "JoinDate");
//            tableMapping.ColumnMappings.Add("ProfileImage", "ProfileImage");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FitnessCustomer] WHERE (([Id] = @Original_Id) AND ((@IsNull_SubscriptionName = 1 AND [SubscriptionName] IS NULL) OR ([SubscriptionName] = @Original_SubscriptionName)) AND ((@IsNull_TrainerId = 1 AND [TrainerId] IS NULL) OR ([TrainerId] = @Original_TrainerId)) AND ([Email] = @Original_Email) AND ([Phone] = @Original_Phone) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([StreetName] = @Original_StreetName) AND ([StreetNumber] = @Original_StreetNumber) AND ([City] = @Original_City) AND ([PostalCode] = @Original_PostalCode) AND ([JoinDate] = @Original_JoinDate))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubscriptionName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubscriptionName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubscriptionName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubscriptionName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FitnessCustomer] ([SubscriptionName], [TrainerId], [Email], [Phone], [FirstName], [LastName], [StreetName], [StreetNumber], [City], [PostalCode], [JoinDate], [ProfileImage]) VALUES (@SubscriptionName, @TrainerId, @Email, @Phone, @FirstName, @LastName, @StreetName, @StreetNumber, @City, @PostalCode, @JoinDate, @ProfileImage);
//SELECT Id, SubscriptionName, TrainerId, Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage FROM FitnessCustomer WHERE (Id = SCOPE_IDENTITY())";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubscriptionName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubscriptionName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfileImage", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfileImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessCustomer] SET [SubscriptionName] = @SubscriptionName, [TrainerId] = @TrainerId, [Email] = @Email, [Phone] = @Phone, [FirstName] = @FirstName, [LastName] = @LastName, [StreetName] = @StreetName, [StreetNumber] = @StreetNumber, [City] = @City, [PostalCode] = @PostalCode, [JoinDate] = @JoinDate, [ProfileImage] = @ProfileImage WHERE (([Id] = @Original_Id) AND ((@IsNull_SubscriptionName = 1 AND [SubscriptionName] IS NULL) OR ([SubscriptionName] = @Original_SubscriptionName)) AND ((@IsNull_TrainerId = 1 AND [TrainerId] IS NULL) OR ([TrainerId] = @Original_TrainerId)) AND ([Email] = @Original_Email) AND ([Phone] = @Original_Phone) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([StreetName] = @Original_StreetName) AND ([StreetNumber] = @Original_StreetNumber) AND ([City] = @Original_City) AND ([PostalCode] = @Original_PostalCode) AND ([JoinDate] = @Original_JoinDate));
//SELECT Id, SubscriptionName, TrainerId, Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage FROM FitnessCustomer WHERE (Id = @Id)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubscriptionName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubscriptionName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfileImage", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfileImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubscriptionName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubscriptionName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubscriptionName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubscriptionName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrainerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Id, SubscriptionName, TrainerId, Email, Phone, FirstName, LastName, Street" +
//                "Name, StreetNumber, City, PostalCode, JoinDate, ProfileImage FROM dbo.FitnessCus" +
//                "tomer";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessCustomerDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessCustomerDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessCustomerDataTable dataTable = new DataSet1.FitnessCustomerDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessCustomerDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessCustomer");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_Id, string Original_SubscriptionName, global::System.Nullable<int> Original_TrainerId, string Original_Email, string Original_Phone, string Original_FirstName, string Original_LastName, string Original_StreetName, string Original_StreetNumber, string Original_City, string Original_PostalCode, System.DateTime Original_JoinDate) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
//            if ((Original_SubscriptionName == null)) {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
//                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
//                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SubscriptionName));
//            }
//            if ((Original_TrainerId.HasValue == true)) {
//                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
//                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_TrainerId.Value));
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
//                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
//            }
//            if ((Original_Email == null)) {
//                throw new global::System.ArgumentNullException("Original_Email");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Email));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Phone));
//            }
//            if ((Original_FirstName == null)) {
//                throw new global::System.ArgumentNullException("Original_FirstName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_FirstName));
//            }
//            if ((Original_LastName == null)) {
//                throw new global::System.ArgumentNullException("Original_LastName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_LastName));
//            }
//            if ((Original_StreetName == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_StreetName));
//            }
//            if ((Original_StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetNumber");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_StreetNumber));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_City));
//            }
//            if ((Original_PostalCode == null)) {
//                throw new global::System.ArgumentNullException("Original_PostalCode");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PostalCode));
//            }
//            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_JoinDate));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(string SubscriptionName, global::System.Nullable<int> TrainerId, string Email, string Phone, string FirstName, string LastName, string StreetName, string StreetNumber, string City, string PostalCode, System.DateTime JoinDate, byte[] ProfileImage) {
//            if ((SubscriptionName == null)) {
//                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SubscriptionName));
//            }
//            if ((TrainerId.HasValue == true)) {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(TrainerId.Value));
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
//            }
//            if ((Email == null)) {
//                throw new global::System.ArgumentNullException("Email");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Email));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Phone));
//            }
//            if ((FirstName == null)) {
//                throw new global::System.ArgumentNullException("FirstName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FirstName));
//            }
//            if ((LastName == null)) {
//                throw new global::System.ArgumentNullException("LastName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LastName));
//            }
//            if ((StreetName == null)) {
//                throw new global::System.ArgumentNullException("StreetName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(StreetName));
//            }
//            if ((StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("StreetNumber");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(StreetNumber));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(City));
//            }
//            if ((PostalCode == null)) {
//                throw new global::System.ArgumentNullException("PostalCode");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PostalCode));
//            }
//            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(JoinDate));
//            if ((ProfileImage == null)) {
//                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[11].Value = ((byte[])(ProfileImage));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(
//                    string SubscriptionName, 
//                    global::System.Nullable<int> TrainerId, 
//                    string Email, 
//                    string Phone, 
//                    string FirstName, 
//                    string LastName, 
//                    string StreetName, 
//                    string StreetNumber, 
//                    string City, 
//                    string PostalCode, 
//                    System.DateTime JoinDate, 
//                    byte[] ProfileImage, 
//                    int Original_Id, 
//                    string Original_SubscriptionName, 
//                    global::System.Nullable<int> Original_TrainerId, 
//                    string Original_Email, 
//                    string Original_Phone, 
//                    string Original_FirstName, 
//                    string Original_LastName, 
//                    string Original_StreetName, 
//                    string Original_StreetNumber, 
//                    string Original_City, 
//                    string Original_PostalCode, 
//                    System.DateTime Original_JoinDate, 
//                    int Id) {
//            if ((SubscriptionName == null)) {
//                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SubscriptionName));
//            }
//            if ((TrainerId.HasValue == true)) {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(TrainerId.Value));
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
//            }
//            if ((Email == null)) {
//                throw new global::System.ArgumentNullException("Email");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Email));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Phone));
//            }
//            if ((FirstName == null)) {
//                throw new global::System.ArgumentNullException("FirstName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FirstName));
//            }
//            if ((LastName == null)) {
//                throw new global::System.ArgumentNullException("LastName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LastName));
//            }
//            if ((StreetName == null)) {
//                throw new global::System.ArgumentNullException("StreetName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(StreetName));
//            }
//            if ((StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("StreetNumber");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(StreetNumber));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(City));
//            }
//            if ((PostalCode == null)) {
//                throw new global::System.ArgumentNullException("PostalCode");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PostalCode));
//            }
//            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(JoinDate));
//            if ((ProfileImage == null)) {
//                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[11].Value = ((byte[])(ProfileImage));
//            }
//            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Id));
//            if ((Original_SubscriptionName == null)) {
//                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
//                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
//                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SubscriptionName));
//            }
//            if ((Original_TrainerId.HasValue == true)) {
//                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
//                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_TrainerId.Value));
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
//                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
//            }
//            if ((Original_Email == null)) {
//                throw new global::System.ArgumentNullException("Original_Email");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Email));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Phone));
//            }
//            if ((Original_FirstName == null)) {
//                throw new global::System.ArgumentNullException("Original_FirstName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_FirstName));
//            }
//            if ((Original_LastName == null)) {
//                throw new global::System.ArgumentNullException("Original_LastName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_LastName));
//            }
//            if ((Original_StreetName == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_StreetName));
//            }
//            if ((Original_StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetNumber");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_StreetNumber));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_City));
//            }
//            if ((Original_PostalCode == null)) {
//                throw new global::System.ArgumentNullException("Original_PostalCode");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_PostalCode));
//            }
//            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_JoinDate));
//            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(
//                    string SubscriptionName, 
//                    global::System.Nullable<int> TrainerId, 
//                    string Email, 
//                    string Phone, 
//                    string FirstName, 
//                    string LastName, 
//                    string StreetName, 
//                    string StreetNumber, 
//                    string City, 
//                    string PostalCode, 
//                    System.DateTime JoinDate, 
//                    byte[] ProfileImage, 
//                    int Original_Id, 
//                    string Original_SubscriptionName, 
//                    global::System.Nullable<int> Original_TrainerId, 
//                    string Original_Email, 
//                    string Original_Phone, 
//                    string Original_FirstName, 
//                    string Original_LastName, 
//                    string Original_StreetName, 
//                    string Original_StreetNumber, 
//                    string Original_City, 
//                    string Original_PostalCode, 
//                    System.DateTime Original_JoinDate) {
//            return this.Update(SubscriptionName, TrainerId, Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage, Original_Id, Original_SubscriptionName, Original_TrainerId, Original_Email, Original_Phone, Original_FirstName, Original_LastName, Original_StreetName, Original_StreetNumber, Original_City, Original_PostalCode, Original_JoinDate, Original_Id);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessCustomerClassBookingTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessCustomerClassBookingTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessCustomerClassBooking";
//            tableMapping.ColumnMappings.Add("BookedClassesId", "BookedClassesId");
//            tableMapping.ColumnMappings.Add("BookedParticipantsId", "BookedParticipantsId");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FitnessCustomerClassBooking] WHERE (([BookedClassesId] = @Orig" +
//                "inal_BookedClassesId) AND ([BookedParticipantsId] = @Original_BookedParticipants" +
//                "Id))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookedClassesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedClassesId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookedParticipantsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedParticipantsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FitnessCustomerClassBooking] ([BookedClassesId], [BookedParticipantsId]) VALUES (@BookedClassesId, @BookedParticipantsId);
//SELECT BookedClassesId, BookedParticipantsId FROM FitnessCustomerClassBooking WHERE (BookedClassesId = @BookedClassesId) AND (BookedParticipantsId = @BookedParticipantsId)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookedClassesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedClassesId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookedParticipantsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedParticipantsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessCustomerClassBooking] SET [BookedClassesId] = @BookedClassesId, [BookedParticipantsId] = @BookedParticipantsId WHERE (([BookedClassesId] = @Original_BookedClassesId) AND ([BookedParticipantsId] = @Original_BookedParticipantsId));
//SELECT BookedClassesId, BookedParticipantsId FROM FitnessCustomerClassBooking WHERE (BookedClassesId = @BookedClassesId) AND (BookedParticipantsId = @BookedParticipantsId)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookedClassesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedClassesId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookedParticipantsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedParticipantsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookedClassesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedClassesId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookedParticipantsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookedParticipantsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT BookedClassesId, BookedParticipantsId FROM dbo.FitnessCustomerClassBooking" +
//                "";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessCustomerClassBookingDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessCustomerClassBookingDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessCustomerClassBookingDataTable dataTable = new DataSet1.FitnessCustomerClassBookingDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessCustomerClassBookingDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessCustomerClassBooking");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_BookedClassesId, int Original_BookedParticipantsId) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_BookedClassesId));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_BookedParticipantsId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int BookedClassesId, int BookedParticipantsId) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(BookedClassesId));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(BookedParticipantsId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int BookedClassesId, int BookedParticipantsId, int Original_BookedClassesId, int Original_BookedParticipantsId) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(BookedClassesId));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(BookedParticipantsId));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_BookedClassesId));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_BookedParticipantsId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int Original_BookedClassesId, int Original_BookedParticipantsId) {
//            return this.Update(Original_BookedClassesId, Original_BookedParticipantsId, Original_BookedClassesId, Original_BookedParticipantsId);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessLocationTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessLocationTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessLocation";
//            tableMapping.ColumnMappings.Add("Id", "Id");
//            tableMapping.ColumnMappings.Add("Name", "Name");
//            tableMapping.ColumnMappings.Add("Capacity", "Capacity");
//            tableMapping.ColumnMappings.Add("CenterId", "CenterId");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FitnessLocation] WHERE (([Id] = @Original_Id) AND ([Capacity] " +
//                "= @Original_Capacity) AND ([CenterId] = @Original_CenterId))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CenterId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FitnessLocation] ([Name], [Capacity], [CenterId]) VALUES (@Nam" +
//                "e, @Capacity, @CenterId);\r\nSELECT Id, Name, Capacity, CenterId FROM FitnessLocat" +
//                "ion WHERE (Id = SCOPE_IDENTITY())";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CenterId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessLocation] SET [Name] = @Name, [Capacity] = @Capacity, [CenterId] = @CenterId WHERE (([Id] = @Original_Id) AND ([Capacity] = @Original_Capacity) AND ([CenterId] = @Original_CenterId));
//SELECT Id, Name, Capacity, CenterId FROM FitnessLocation WHERE (Id = @Id)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CenterId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CenterId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Id, Name, Capacity, CenterId FROM dbo.FitnessLocation";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessLocationDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessLocationDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessLocationDataTable dataTable = new DataSet1.FitnessLocationDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessLocationDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessLocation");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_Id, int Original_Capacity, int Original_CenterId) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Capacity));
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CenterId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(string Name, int Capacity, int CenterId) {
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
//            }
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Capacity));
//            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(CenterId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Name, int Capacity, int CenterId, int Original_Id, int Original_Capacity, int Original_CenterId, int Id) {
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
//            }
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Capacity));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(CenterId));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Id));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Capacity));
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_CenterId));
//            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Name, int Capacity, int CenterId, int Original_Id, int Original_Capacity, int Original_CenterId) {
//            return this.Update(Name, Capacity, CenterId, Original_Id, Original_Capacity, Original_CenterId, Original_Id);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessSubscriptionTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessSubscriptionTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessSubscription";
//            tableMapping.ColumnMappings.Add("Name", "Name");
//            tableMapping.ColumnMappings.Add("Description", "Description");
//            tableMapping.ColumnMappings.Add("Cost", "Cost");
//            tableMapping.ColumnMappings.Add("IsGroupFitness", "IsGroupFitness");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FitnessSubscription] WHERE (([Name] = @Original_Name) AND ([De" +
//                "scription] = @Original_Description) AND ([Cost] = @Original_Cost) AND ([IsGroupF" +
//                "itness] = @Original_IsGroupFitness))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsGroupFitness", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGroupFitness", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FitnessSubscription] ([Name], [Description], [Cost], [IsGroupF" +
//                "itness]) VALUES (@Name, @Description, @Cost, @IsGroupFitness);\r\nSELECT Name, Des" +
//                "cription, Cost, IsGroupFitness FROM FitnessSubscription WHERE (Name = @Name)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsGroupFitness", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGroupFitness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessSubscription] SET [Name] = @Name, [Description] = @Description, [Cost] = @Cost, [IsGroupFitness] = @IsGroupFitness WHERE (([Name] = @Original_Name) AND ([Description] = @Original_Description) AND ([Cost] = @Original_Cost) AND ([IsGroupFitness] = @Original_IsGroupFitness));
//SELECT Name, Description, Cost, IsGroupFitness FROM FitnessSubscription WHERE (Name = @Name)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsGroupFitness", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGroupFitness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsGroupFitness", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGroupFitness", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Name, Description, Cost, IsGroupFitness FROM dbo.FitnessSubscription";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessSubscriptionDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessSubscriptionDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessSubscriptionDataTable dataTable = new DataSet1.FitnessSubscriptionDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessSubscriptionDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessSubscription");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(string Original_Name, string Original_Description, decimal Original_Cost, bool Original_IsGroupFitness) {
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Name));
//            }
//            if ((Original_Description == null)) {
//                throw new global::System.ArgumentNullException("Original_Description");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Description));
//            }
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Cost));
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_IsGroupFitness));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(string Name, string Description, decimal Cost, bool IsGroupFitness) {
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
//            }
//            if ((Description == null)) {
//                throw new global::System.ArgumentNullException("Description");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Description));
//            }
//            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Cost));
//            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsGroupFitness));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Name, string Description, decimal Cost, bool IsGroupFitness, string Original_Name, string Original_Description, decimal Original_Cost, bool Original_IsGroupFitness) {
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
//            }
//            if ((Description == null)) {
//                throw new global::System.ArgumentNullException("Description");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Description));
//            }
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Cost));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(IsGroupFitness));
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Name));
//            }
//            if ((Original_Description == null)) {
//                throw new global::System.ArgumentNullException("Original_Description");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Description));
//            }
//            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_Cost));
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Original_IsGroupFitness));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Description, decimal Cost, bool IsGroupFitness, string Original_Name, string Original_Description, decimal Original_Cost, bool Original_IsGroupFitness) {
//            return this.Update(Original_Name, Description, Cost, IsGroupFitness, Original_Name, Original_Description, Original_Cost, Original_IsGroupFitness);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessTrainerTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessTrainerTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessTrainer";
//            tableMapping.ColumnMappings.Add("Email", "Email");
//            tableMapping.ColumnMappings.Add("Phone", "Phone");
//            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
//            tableMapping.ColumnMappings.Add("LastName", "LastName");
//            tableMapping.ColumnMappings.Add("StreetName", "StreetName");
//            tableMapping.ColumnMappings.Add("StreetNumber", "StreetNumber");
//            tableMapping.ColumnMappings.Add("City", "City");
//            tableMapping.ColumnMappings.Add("PostalCode", "PostalCode");
//            tableMapping.ColumnMappings.Add("JoinDate", "JoinDate");
//            tableMapping.ColumnMappings.Add("ProfileImage", "ProfileImage");
//            tableMapping.ColumnMappings.Add("Id", "Id");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FitnessTrainer] WHERE (([Email] = @Original_Email) AND ([Phone] = @Original_Phone) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([StreetName] = @Original_StreetName) AND ([StreetNumber] = @Original_StreetNumber) AND ([City] = @Original_City) AND ([PostalCode] = @Original_PostalCode) AND ([JoinDate] = @Original_JoinDate) AND ([Id] = @Original_Id))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FitnessTrainer] ([Email], [Phone], [FirstName], [LastName], [StreetName], [StreetNumber], [City], [PostalCode], [JoinDate], [ProfileImage]) VALUES (@Email, @Phone, @FirstName, @LastName, @StreetName, @StreetNumber, @City, @PostalCode, @JoinDate, @ProfileImage);
//SELECT Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage, Id FROM FitnessTrainer WHERE (Id = SCOPE_IDENTITY())";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfileImage", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfileImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessTrainer] SET [Email] = @Email, [Phone] = @Phone, [FirstName] = @FirstName, [LastName] = @LastName, [StreetName] = @StreetName, [StreetNumber] = @StreetNumber, [City] = @City, [PostalCode] = @PostalCode, [JoinDate] = @JoinDate, [ProfileImage] = @ProfileImage WHERE (([Email] = @Original_Email) AND ([Phone] = @Original_Phone) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([StreetName] = @Original_StreetName) AND ([StreetNumber] = @Original_StreetNumber) AND ([City] = @Original_City) AND ([PostalCode] = @Original_PostalCode) AND ([JoinDate] = @Original_JoinDate) AND ([Id] = @Original_Id));
//SELECT Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage, Id FROM FitnessTrainer WHERE (Id = @Id)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfileImage", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfileImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StreetNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PostalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JoinDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JoinDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalC" +
//                "ode, JoinDate, ProfileImage, Id FROM dbo.FitnessTrainer";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessTrainerDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessTrainerDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessTrainerDataTable dataTable = new DataSet1.FitnessTrainerDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessTrainerDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessTrainer");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(string Original_Email, string Original_Phone, string Original_FirstName, string Original_LastName, string Original_StreetName, string Original_StreetNumber, string Original_City, string Original_PostalCode, System.DateTime Original_JoinDate, int Original_Id) {
//            if ((Original_Email == null)) {
//                throw new global::System.ArgumentNullException("Original_Email");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Email));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Phone));
//            }
//            if ((Original_FirstName == null)) {
//                throw new global::System.ArgumentNullException("Original_FirstName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FirstName));
//            }
//            if ((Original_LastName == null)) {
//                throw new global::System.ArgumentNullException("Original_LastName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_LastName));
//            }
//            if ((Original_StreetName == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetName");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_StreetName));
//            }
//            if ((Original_StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetNumber");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_StreetNumber));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_City));
//            }
//            if ((Original_PostalCode == null)) {
//                throw new global::System.ArgumentNullException("Original_PostalCode");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PostalCode));
//            }
//            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_JoinDate));
//            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(string Email, string Phone, string FirstName, string LastName, string StreetName, string StreetNumber, string City, string PostalCode, System.DateTime JoinDate, byte[] ProfileImage) {
//            if ((Email == null)) {
//                throw new global::System.ArgumentNullException("Email");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Email));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Phone));
//            }
//            if ((FirstName == null)) {
//                throw new global::System.ArgumentNullException("FirstName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FirstName));
//            }
//            if ((LastName == null)) {
//                throw new global::System.ArgumentNullException("LastName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LastName));
//            }
//            if ((StreetName == null)) {
//                throw new global::System.ArgumentNullException("StreetName");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(StreetName));
//            }
//            if ((StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("StreetNumber");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(StreetNumber));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(City));
//            }
//            if ((PostalCode == null)) {
//                throw new global::System.ArgumentNullException("PostalCode");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PostalCode));
//            }
//            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(JoinDate));
//            if ((ProfileImage == null)) {
//                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(ProfileImage));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(
//                    string Email, 
//                    string Phone, 
//                    string FirstName, 
//                    string LastName, 
//                    string StreetName, 
//                    string StreetNumber, 
//                    string City, 
//                    string PostalCode, 
//                    System.DateTime JoinDate, 
//                    byte[] ProfileImage, 
//                    string Original_Email, 
//                    string Original_Phone, 
//                    string Original_FirstName, 
//                    string Original_LastName, 
//                    string Original_StreetName, 
//                    string Original_StreetNumber, 
//                    string Original_City, 
//                    string Original_PostalCode, 
//                    System.DateTime Original_JoinDate, 
//                    int Original_Id, 
//                    int Id) {
//            if ((Email == null)) {
//                throw new global::System.ArgumentNullException("Email");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Email));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Phone));
//            }
//            if ((FirstName == null)) {
//                throw new global::System.ArgumentNullException("FirstName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FirstName));
//            }
//            if ((LastName == null)) {
//                throw new global::System.ArgumentNullException("LastName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LastName));
//            }
//            if ((StreetName == null)) {
//                throw new global::System.ArgumentNullException("StreetName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(StreetName));
//            }
//            if ((StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("StreetNumber");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(StreetNumber));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(City));
//            }
//            if ((PostalCode == null)) {
//                throw new global::System.ArgumentNullException("PostalCode");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PostalCode));
//            }
//            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(JoinDate));
//            if ((ProfileImage == null)) {
//                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(ProfileImage));
//            }
//            if ((Original_Email == null)) {
//                throw new global::System.ArgumentNullException("Original_Email");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Email));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Phone));
//            }
//            if ((Original_FirstName == null)) {
//                throw new global::System.ArgumentNullException("Original_FirstName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_FirstName));
//            }
//            if ((Original_LastName == null)) {
//                throw new global::System.ArgumentNullException("Original_LastName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_LastName));
//            }
//            if ((Original_StreetName == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetName");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_StreetName));
//            }
//            if ((Original_StreetNumber == null)) {
//                throw new global::System.ArgumentNullException("Original_StreetNumber");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_StreetNumber));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_City));
//            }
//            if ((Original_PostalCode == null)) {
//                throw new global::System.ArgumentNullException("Original_PostalCode");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PostalCode));
//            }
//            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_JoinDate));
//            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Id));
//            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Id));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(
//                    string Email, 
//                    string Phone, 
//                    string FirstName, 
//                    string LastName, 
//                    string StreetName, 
//                    string StreetNumber, 
//                    string City, 
//                    string PostalCode, 
//                    System.DateTime JoinDate, 
//                    byte[] ProfileImage, 
//                    string Original_Email, 
//                    string Original_Phone, 
//                    string Original_FirstName, 
//                    string Original_LastName, 
//                    string Original_StreetName, 
//                    string Original_StreetNumber, 
//                    string Original_City, 
//                    string Original_PostalCode, 
//                    System.DateTime Original_JoinDate, 
//                    int Original_Id) {
//            return this.Update(Email, Phone, FirstName, LastName, StreetName, StreetNumber, City, PostalCode, JoinDate, ProfileImage, Original_Email, Original_Phone, Original_FirstName, Original_LastName, Original_StreetName, Original_StreetNumber, Original_City, Original_PostalCode, Original_JoinDate, Original_Id, Original_Id);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class FitnessTrainerClassBookingTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public FitnessTrainerClassBookingTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "FitnessTrainerClassBooking";
//            tableMapping.ColumnMappings.Add("ClassesByTrainerId", "ClassesByTrainerId");
//            tableMapping.ColumnMappings.Add("InstructorsId", "InstructorsId");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FitnessTrainerClassBooking] WHERE (([ClassesByTrainerId] = @Or" +
//                "iginal_ClassesByTrainerId) AND ([InstructorsId] = @Original_InstructorsId))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClassesByTrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassesByTrainerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstructorsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstructorsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FitnessTrainerClassBooking] ([ClassesByTrainerId], [InstructorsId]) VALUES (@ClassesByTrainerId, @InstructorsId);
//SELECT ClassesByTrainerId, InstructorsId FROM FitnessTrainerClassBooking WHERE (ClassesByTrainerId = @ClassesByTrainerId) AND (InstructorsId = @InstructorsId)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClassesByTrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassesByTrainerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstructorsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstructorsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FitnessTrainerClassBooking] SET [ClassesByTrainerId] = @ClassesByTrainerId, [InstructorsId] = @InstructorsId WHERE (([ClassesByTrainerId] = @Original_ClassesByTrainerId) AND ([InstructorsId] = @Original_InstructorsId));
//SELECT ClassesByTrainerId, InstructorsId FROM FitnessTrainerClassBooking WHERE (ClassesByTrainerId = @ClassesByTrainerId) AND (InstructorsId = @InstructorsId)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClassesByTrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassesByTrainerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstructorsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstructorsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClassesByTrainerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassesByTrainerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstructorsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstructorsId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AsyncFitnessDB;Integrated Secu" +
//                "rity=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False";
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ClassesByTrainerId, InstructorsId FROM dbo.FitnessTrainerClassBooking";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(DataSet1.FitnessTrainerClassBookingDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual DataSet1.FitnessTrainerClassBookingDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            DataSet1.FitnessTrainerClassBookingDataTable dataTable = new DataSet1.FitnessTrainerClassBookingDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1.FitnessTrainerClassBookingDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(DataSet1 dataSet) {
//            return this.Adapter.Update(dataSet, "FitnessTrainerClassBooking");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ClassesByTrainerId, int Original_InstructorsId) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ClassesByTrainerId));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_InstructorsId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ClassesByTrainerId, int InstructorsId) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ClassesByTrainerId));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(InstructorsId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ClassesByTrainerId, int InstructorsId, int Original_ClassesByTrainerId, int Original_InstructorsId) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ClassesByTrainerId));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(InstructorsId));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ClassesByTrainerId));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_InstructorsId));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int Original_ClassesByTrainerId, int Original_InstructorsId) {
//            return this.Update(Original_ClassesByTrainerId, Original_InstructorsId, Original_ClassesByTrainerId, Original_InstructorsId);
//        }
//    }
    
//    /// <summary>
//    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
//        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
//    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
//        private UpdateOrderOption _updateOrder;
        
//        private FitnessAdminTableAdapter _fitnessAdminTableAdapter;
        
//        private FitnessCenterTableAdapter _fitnessCenterTableAdapter;
        
//        private FitnessClassTableAdapter _fitnessClassTableAdapter;
        
//        private FitnessConceptTableAdapter _fitnessConceptTableAdapter;
        
//        private FitnessConceptAtCenterTableAdapter _fitnessConceptAtCenterTableAdapter;
        
//        private FitnessCustomerTableAdapter _fitnessCustomerTableAdapter;
        
//        private FitnessCustomerClassBookingTableAdapter _fitnessCustomerClassBookingTableAdapter;
        
//        private FitnessLocationTableAdapter _fitnessLocationTableAdapter;
        
//        private FitnessSubscriptionTableAdapter _fitnessSubscriptionTableAdapter;
        
//        private FitnessTrainerTableAdapter _fitnessTrainerTableAdapter;
        
//        private FitnessTrainerClassBookingTableAdapter _fitnessTrainerClassBookingTableAdapter;
        
//        private bool _backupDataSetBeforeUpdate;
        
//        private global::System.Data.IDbConnection _connection;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public UpdateOrderOption UpdateOrder {
//            get {
//                return this._updateOrder;
//            }
//            set {
//                this._updateOrder = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessAdminTableAdapter FitnessAdminTableAdapter {
//            get {
//                return this._fitnessAdminTableAdapter;
//            }
//            set {
//                this._fitnessAdminTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessCenterTableAdapter FitnessCenterTableAdapter {
//            get {
//                return this._fitnessCenterTableAdapter;
//            }
//            set {
//                this._fitnessCenterTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessClassTableAdapter FitnessClassTableAdapter {
//            get {
//                return this._fitnessClassTableAdapter;
//            }
//            set {
//                this._fitnessClassTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessConceptTableAdapter FitnessConceptTableAdapter {
//            get {
//                return this._fitnessConceptTableAdapter;
//            }
//            set {
//                this._fitnessConceptTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessConceptAtCenterTableAdapter FitnessConceptAtCenterTableAdapter {
//            get {
//                return this._fitnessConceptAtCenterTableAdapter;
//            }
//            set {
//                this._fitnessConceptAtCenterTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessCustomerTableAdapter FitnessCustomerTableAdapter {
//            get {
//                return this._fitnessCustomerTableAdapter;
//            }
//            set {
//                this._fitnessCustomerTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessCustomerClassBookingTableAdapter FitnessCustomerClassBookingTableAdapter {
//            get {
//                return this._fitnessCustomerClassBookingTableAdapter;
//            }
//            set {
//                this._fitnessCustomerClassBookingTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessLocationTableAdapter FitnessLocationTableAdapter {
//            get {
//                return this._fitnessLocationTableAdapter;
//            }
//            set {
//                this._fitnessLocationTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessSubscriptionTableAdapter FitnessSubscriptionTableAdapter {
//            get {
//                return this._fitnessSubscriptionTableAdapter;
//            }
//            set {
//                this._fitnessSubscriptionTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessTrainerTableAdapter FitnessTrainerTableAdapter {
//            get {
//                return this._fitnessTrainerTableAdapter;
//            }
//            set {
//                this._fitnessTrainerTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public FitnessTrainerClassBookingTableAdapter FitnessTrainerClassBookingTableAdapter {
//            get {
//                return this._fitnessTrainerClassBookingTableAdapter;
//            }
//            set {
//                this._fitnessTrainerClassBookingTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public bool BackupDataSetBeforeUpdate {
//            get {
//                return this._backupDataSetBeforeUpdate;
//            }
//            set {
//                this._backupDataSetBeforeUpdate = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        public global::System.Data.IDbConnection Connection {
//            get {
//                if ((this._connection != null)) {
//                    return this._connection;
//                }
//                if (((this._fitnessAdminTableAdapter != null) 
//                            && (this._fitnessAdminTableAdapter.Connection != null))) {
//                    return this._fitnessAdminTableAdapter.Connection;
//                }
//                if (((this._fitnessCenterTableAdapter != null) 
//                            && (this._fitnessCenterTableAdapter.Connection != null))) {
//                    return this._fitnessCenterTableAdapter.Connection;
//                }
//                if (((this._fitnessClassTableAdapter != null) 
//                            && (this._fitnessClassTableAdapter.Connection != null))) {
//                    return this._fitnessClassTableAdapter.Connection;
//                }
//                if (((this._fitnessConceptTableAdapter != null) 
//                            && (this._fitnessConceptTableAdapter.Connection != null))) {
//                    return this._fitnessConceptTableAdapter.Connection;
//                }
//                if (((this._fitnessConceptAtCenterTableAdapter != null) 
//                            && (this._fitnessConceptAtCenterTableAdapter.Connection != null))) {
//                    return this._fitnessConceptAtCenterTableAdapter.Connection;
//                }
//                if (((this._fitnessCustomerTableAdapter != null) 
//                            && (this._fitnessCustomerTableAdapter.Connection != null))) {
//                    return this._fitnessCustomerTableAdapter.Connection;
//                }
//                if (((this._fitnessCustomerClassBookingTableAdapter != null) 
//                            && (this._fitnessCustomerClassBookingTableAdapter.Connection != null))) {
//                    return this._fitnessCustomerClassBookingTableAdapter.Connection;
//                }
//                if (((this._fitnessLocationTableAdapter != null) 
//                            && (this._fitnessLocationTableAdapter.Connection != null))) {
//                    return this._fitnessLocationTableAdapter.Connection;
//                }
//                if (((this._fitnessSubscriptionTableAdapter != null) 
//                            && (this._fitnessSubscriptionTableAdapter.Connection != null))) {
//                    return this._fitnessSubscriptionTableAdapter.Connection;
//                }
//                if (((this._fitnessTrainerTableAdapter != null) 
//                            && (this._fitnessTrainerTableAdapter.Connection != null))) {
//                    return this._fitnessTrainerTableAdapter.Connection;
//                }
//                if (((this._fitnessTrainerClassBookingTableAdapter != null) 
//                            && (this._fitnessTrainerClassBookingTableAdapter.Connection != null))) {
//                    return this._fitnessTrainerClassBookingTableAdapter.Connection;
//                }
//                return null;
//            }
//            set {
//                this._connection = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        public int TableAdapterInstanceCount {
//            get {
//                int count = 0;
//                if ((this._fitnessAdminTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessCenterTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessClassTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessConceptTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessConceptAtCenterTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessCustomerTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessCustomerClassBookingTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessLocationTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessSubscriptionTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessTrainerTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._fitnessTrainerClassBookingTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                return count;
//            }
//        }
        
//        /// <summary>
//        ///Update rows in top-down order.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
//            int result = 0;
//            if ((this._fitnessAdminTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessAdmin.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessAdminTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessCenterTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessCenter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessCenterTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessTrainerTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessTrainer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessTrainerTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessConceptTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessConcept.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessConceptTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessLocationTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessLocation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessLocationTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessClassTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessClass.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessClassTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessCustomerTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessCustomer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessCustomerTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessSubscriptionTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessSubscription.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessSubscriptionTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessConceptAtCenterTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessConceptAtCenter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessConceptAtCenterTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessCustomerClassBookingTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessCustomerClassBooking.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessCustomerClassBookingTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._fitnessTrainerClassBookingTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.FitnessTrainerClassBooking.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._fitnessTrainerClassBookingTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            return result;
//        }
        
//        /// <summary>
//        ///Insert rows in top-down order.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
//            int result = 0;
//            if ((this._fitnessAdminTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessAdmin.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessAdminTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessCenterTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessCenter.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessCenterTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessTrainerTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessTrainer.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessTrainerTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessConceptTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessConcept.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessConceptTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessLocationTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessLocation.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessLocationTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessClassTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessClass.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessClassTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessCustomerTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessCustomer.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessCustomerTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessSubscriptionTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessSubscription.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessSubscriptionTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessConceptAtCenterTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessConceptAtCenter.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessConceptAtCenterTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessCustomerClassBookingTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessCustomerClassBooking.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessCustomerClassBookingTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._fitnessTrainerClassBookingTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.FitnessTrainerClassBooking.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._fitnessTrainerClassBookingTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            return result;
//        }
        
//        /// <summary>
//        ///Delete rows in bottom-up order.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
//            int result = 0;
//            if ((this._fitnessTrainerClassBookingTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessTrainerClassBooking.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessTrainerClassBookingTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessCustomerClassBookingTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessCustomerClassBooking.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessCustomerClassBookingTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessConceptAtCenterTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessConceptAtCenter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessConceptAtCenterTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessSubscriptionTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessSubscription.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessSubscriptionTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessCustomerTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessCustomer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessCustomerTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessClassTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessClass.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessClassTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessLocationTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessLocation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessLocationTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessConceptTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessConcept.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessConceptTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessTrainerTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessTrainer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessTrainerTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessCenterTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessCenter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessCenterTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._fitnessAdminTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.FitnessAdmin.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._fitnessAdminTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            return result;
//        }
        
//        /// <summary>
//        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
//            if (((updatedRows == null) 
//                        || (updatedRows.Length < 1))) {
//                return updatedRows;
//            }
//            if (((allAddedRows == null) 
//                        || (allAddedRows.Count < 1))) {
//                return updatedRows;
//            }
//            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
//            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
//                global::System.Data.DataRow row = updatedRows[i];
//                if ((allAddedRows.Contains(row) == false)) {
//                    realUpdatedRows.Add(row);
//                }
//            }
//            return realUpdatedRows.ToArray();
//        }
        
//        /// <summary>
//        ///Update all changes to the dataset.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public virtual int UpdateAll(DataSet1 dataSet) {
//            if ((dataSet == null)) {
//                throw new global::System.ArgumentNullException("dataSet");
//            }
//            if ((dataSet.HasChanges() == false)) {
//                return 0;
//            }
//            if (((this._fitnessAdminTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessAdminTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessCenterTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessCenterTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessClassTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessClassTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessConceptTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessConceptTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessConceptAtCenterTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessConceptAtCenterTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessCustomerTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessCustomerTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessCustomerClassBookingTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessCustomerClassBookingTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessLocationTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessLocationTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessSubscriptionTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessSubscriptionTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessTrainerTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessTrainerTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            if (((this._fitnessTrainerClassBookingTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._fitnessTrainerClassBookingTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
//                        "tring.");
//            }
//            global::System.Data.IDbConnection workConnection = this.Connection;
//            if ((workConnection == null)) {
//                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
//                        "ger TableAdapter property to a valid TableAdapter instance.");
//            }
//            bool workConnOpened = false;
//            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
//                        == global::System.Data.ConnectionState.Broken)) {
//                workConnection.Close();
//            }
//            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
//                workConnection.Open();
//                workConnOpened = true;
//            }
//            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
//            if ((workTransaction == null)) {
//                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
//                        "ctions or the current state is not allowing the transaction to begin.");
//            }
//            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
//            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
//            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
//            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
//            int result = 0;
//            global::System.Data.DataSet backupDataSet = null;
//            if (this.BackupDataSetBeforeUpdate) {
//                backupDataSet = new global::System.Data.DataSet();
//                backupDataSet.Merge(dataSet);
//            }
//            try {
//                // ---- Prepare for update -----------
//                //
//                if ((this._fitnessAdminTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessAdminTableAdapter, this._fitnessAdminTableAdapter.Connection);
//                    this._fitnessAdminTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessAdminTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessAdminTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessAdminTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessAdminTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessCenterTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessCenterTableAdapter, this._fitnessCenterTableAdapter.Connection);
//                    this._fitnessCenterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessCenterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessCenterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessCenterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessCenterTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessClassTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessClassTableAdapter, this._fitnessClassTableAdapter.Connection);
//                    this._fitnessClassTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessClassTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessClassTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessClassTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessClassTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessConceptTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessConceptTableAdapter, this._fitnessConceptTableAdapter.Connection);
//                    this._fitnessConceptTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessConceptTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessConceptTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessConceptTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessConceptTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessConceptAtCenterTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessConceptAtCenterTableAdapter, this._fitnessConceptAtCenterTableAdapter.Connection);
//                    this._fitnessConceptAtCenterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessConceptAtCenterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessConceptAtCenterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessConceptAtCenterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessConceptAtCenterTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessCustomerTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessCustomerTableAdapter, this._fitnessCustomerTableAdapter.Connection);
//                    this._fitnessCustomerTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessCustomerTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessCustomerTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessCustomerTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessCustomerTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessCustomerClassBookingTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessCustomerClassBookingTableAdapter, this._fitnessCustomerClassBookingTableAdapter.Connection);
//                    this._fitnessCustomerClassBookingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessCustomerClassBookingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessCustomerClassBookingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessCustomerClassBookingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessCustomerClassBookingTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessLocationTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessLocationTableAdapter, this._fitnessLocationTableAdapter.Connection);
//                    this._fitnessLocationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessLocationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessLocationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessLocationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessLocationTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessSubscriptionTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessSubscriptionTableAdapter, this._fitnessSubscriptionTableAdapter.Connection);
//                    this._fitnessSubscriptionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessSubscriptionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessSubscriptionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessSubscriptionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessSubscriptionTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessTrainerTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessTrainerTableAdapter, this._fitnessTrainerTableAdapter.Connection);
//                    this._fitnessTrainerTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessTrainerTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessTrainerTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessTrainerTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessTrainerTableAdapter.Adapter);
//                    }
//                }
//                if ((this._fitnessTrainerClassBookingTableAdapter != null)) {
//                    revertConnections.Add(this._fitnessTrainerClassBookingTableAdapter, this._fitnessTrainerClassBookingTableAdapter.Connection);
//                    this._fitnessTrainerClassBookingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._fitnessTrainerClassBookingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._fitnessTrainerClassBookingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._fitnessTrainerClassBookingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._fitnessTrainerClassBookingTableAdapter.Adapter);
//                    }
//                }
//                // 
//                //---- Perform updates -----------
//                //
//                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
//                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
//                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
//                }
//                else {
//                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
//                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
//                }
//                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
//                // 
//                //---- Commit updates -----------
//                //
//                workTransaction.Commit();
//                if ((0 < allAddedRows.Count)) {
//                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
//                    allAddedRows.CopyTo(rows);
//                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
//                        global::System.Data.DataRow row = rows[i];
//                        row.AcceptChanges();
//                    }
//                }
//                if ((0 < allChangedRows.Count)) {
//                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
//                    allChangedRows.CopyTo(rows);
//                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
//                        global::System.Data.DataRow row = rows[i];
//                        row.AcceptChanges();
//                    }
//                }
//            }
//            catch (global::System.Exception ex) {
//                workTransaction.Rollback();
//                // ---- Restore the dataset -----------
//                if (this.BackupDataSetBeforeUpdate) {
//                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
//                    dataSet.Clear();
//                    dataSet.Merge(backupDataSet);
//                }
//                else {
//                    if ((0 < allAddedRows.Count)) {
//                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
//                        allAddedRows.CopyTo(rows);
//                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
//                            global::System.Data.DataRow row = rows[i];
//                            row.AcceptChanges();
//                            row.SetAdded();
//                        }
//                    }
//                }
//                throw ex;
//            }
//            finally {
//                if (workConnOpened) {
//                    workConnection.Close();
//                }
//                if ((this._fitnessAdminTableAdapter != null)) {
//                    this._fitnessAdminTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessAdminTableAdapter]));
//                    this._fitnessAdminTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessCenterTableAdapter != null)) {
//                    this._fitnessCenterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessCenterTableAdapter]));
//                    this._fitnessCenterTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessClassTableAdapter != null)) {
//                    this._fitnessClassTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessClassTableAdapter]));
//                    this._fitnessClassTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessConceptTableAdapter != null)) {
//                    this._fitnessConceptTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessConceptTableAdapter]));
//                    this._fitnessConceptTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessConceptAtCenterTableAdapter != null)) {
//                    this._fitnessConceptAtCenterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessConceptAtCenterTableAdapter]));
//                    this._fitnessConceptAtCenterTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessCustomerTableAdapter != null)) {
//                    this._fitnessCustomerTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessCustomerTableAdapter]));
//                    this._fitnessCustomerTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessCustomerClassBookingTableAdapter != null)) {
//                    this._fitnessCustomerClassBookingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessCustomerClassBookingTableAdapter]));
//                    this._fitnessCustomerClassBookingTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessLocationTableAdapter != null)) {
//                    this._fitnessLocationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessLocationTableAdapter]));
//                    this._fitnessLocationTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessSubscriptionTableAdapter != null)) {
//                    this._fitnessSubscriptionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessSubscriptionTableAdapter]));
//                    this._fitnessSubscriptionTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessTrainerTableAdapter != null)) {
//                    this._fitnessTrainerTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessTrainerTableAdapter]));
//                    this._fitnessTrainerTableAdapter.Transaction = null;
//                }
//                if ((this._fitnessTrainerClassBookingTableAdapter != null)) {
//                    this._fitnessTrainerClassBookingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fitnessTrainerClassBookingTableAdapter]));
//                    this._fitnessTrainerClassBookingTableAdapter.Transaction = null;
//                }
//                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
//                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
//                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
//                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
//                        global::System.Data.Common.DataAdapter adapter = adapters[i];
//                        adapter.AcceptChangesDuringUpdate = true;
//                    }
//                }
//            }
//            return result;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
//            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
//            if ((this._connection != null)) {
//                return true;
//            }
//            if (((this.Connection == null) 
//                        || (inputConnection == null))) {
//                return true;
//            }
//            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
//                return true;
//            }
//            return false;
//        }
        
//        /// <summary>
//        ///Update Order Option
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        public enum UpdateOrderOption {
            
//            InsertUpdateDelete = 0,
            
//            UpdateInsertDelete = 1,
//        }
        
//        /// <summary>
//        ///Used to sort self-referenced table's rows
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
//            private global::System.Data.DataRelation _relation;
            
//            private int _childFirst;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
//                this._relation = relation;
//                if (childFirst) {
//                    this._childFirst = -1;
//                }
//                else {
//                    this._childFirst = 1;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
//                global::System.Diagnostics.Debug.Assert((row != null));
//                global::System.Data.DataRow root = row;
//                distance = 0;

//                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
//                traversedRows[row] = row;

//                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
//                for (
//                ; ((parent != null) 
//                            && (traversedRows.ContainsKey(parent) == false)); 
//                ) {
//                    distance = (distance + 1);
//                    root = parent;
//                    traversedRows[parent] = parent;
//                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
//                }

//                if ((distance == 0)) {
//                    traversedRows.Clear();
//                    traversedRows[row] = row;
//                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
//                    for (
//                    ; ((parent != null) 
//                                && (traversedRows.ContainsKey(parent) == false)); 
//                    ) {
//                        distance = (distance + 1);
//                        root = parent;
//                        traversedRows[parent] = parent;
//                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
//                    }
//                }

//                return root;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
//            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
//                if (object.ReferenceEquals(row1, row2)) {
//                    return 0;
//                }
//                if ((row1 == null)) {
//                    return -1;
//                }
//                if ((row2 == null)) {
//                    return 1;
//                }

//                int distance1 = 0;
//                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

//                int distance2 = 0;
//                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

//                if (object.ReferenceEquals(root1, root2)) {
//                    return (this._childFirst * distance1.CompareTo(distance2));
//                }
//                else {
//                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
//                                    && (root2.Table != null)));
//                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
//                        return -1;
//                    }
//                    else {
//                        return 1;
//                    }
//                }
//            }
//        }
//    }
//}

//#pragma warning restore 1591